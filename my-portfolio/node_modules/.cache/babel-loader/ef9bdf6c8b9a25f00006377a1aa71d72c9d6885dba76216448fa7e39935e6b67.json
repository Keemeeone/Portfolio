{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Project/Project.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  projectData\n}) => {\n  _s();\n  const projectRef = useRef(null);\n  useEffect(() => {\n    if (projectRef.current) {\n      projectRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: projectRef,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: projectData.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: projectData.role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: projectData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: projectData.imageUrls.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: `Project ${index + 1}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), projectData.demoLink && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: projectData.demoLink,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"View Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"H4jPq4acDQXJGShvepMZKZ6FIN4=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Project","projectData","_s","projectRef","current","scrollIntoView","behavior","ref","children","title","fileName","_jsxFileName","lineNumber","columnNumber","role","description","imageUrls","map","imageUrl","index","src","alt","demoLink","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Project/Project.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nconst Project = ({ projectData }) => {\n    const projectRef = useRef(null);\n\n    useEffect(() => {\n        if (projectRef.current) {\n            projectRef.current.scrollIntoView({ behavior: 'smooth' });\n        }\n    }, []);\n\n    return (\n        <div ref={projectRef}>\n            <h2>{projectData.title}</h2>\n            <p>{projectData.role}</p>\n            <p>{projectData.description}</p>\n            \n            {/* Render images for the project */}\n            <div>\n                {projectData.imageUrls.map((imageUrl, index) => (\n                    <img key={index} src={imageUrl} alt={`Project ${index + 1}`} />\n                ))}\n            </div>\n\n            {/* Render demo link if available */}\n            {projectData.demoLink && (\n                <p>\n                    <a href={projectData.demoLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                        View Demo\n                    </a>\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default Project;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,UAAU,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACZ,IAAIM,UAAU,CAACC,OAAO,EAAE;MACpBD,UAAU,CAACC,OAAO,CAACC,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC7D;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKQ,GAAG,EAAEJ,UAAW;IAAAK,QAAA,gBACjBT,OAAA;MAAAS,QAAA,EAAKP,WAAW,CAACQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC5Bd,OAAA;MAAAS,QAAA,EAAIP,WAAW,CAACa;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBd,OAAA;MAAAS,QAAA,EAAIP,WAAW,CAACc;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhCd,OAAA;MAAAS,QAAA,EACKP,WAAW,CAACe,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACvCpB,OAAA;QAAiBqB,GAAG,EAAEF,QAAS;QAACG,GAAG,EAAG,WAAUF,KAAK,GAAG,CAAE;MAAE,GAAlDA,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+C,CACjE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLZ,WAAW,CAACqB,QAAQ,iBACjBvB,OAAA;MAAAS,QAAA,eACIT,OAAA;QAAGwB,IAAI,EAAEtB,WAAW,CAACqB,QAAS;QAACE,MAAM,EAAC,QAAQ;QAACC,GAAG,EAAC,qBAAqB;QAAAjB,QAAA,EAAC;MAEzE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACX,EAAA,CAhCIF,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}