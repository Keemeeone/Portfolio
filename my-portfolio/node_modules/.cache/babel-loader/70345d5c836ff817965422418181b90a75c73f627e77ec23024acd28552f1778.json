{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/AIchat/AIchat.jsx\",\n  _s = $RefreshSig$();\n// InterviewComponent.js\nimport React, { useState } from 'react';\nimport { Button, Container, Paper, TextField, List, ListItem } from '@mui/material';\nimport { getOpenAIResponse } from './server'; // Adjust the path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InterviewComponent = () => {\n  _s();\n  const [interviewResponse, setInterviewResponse] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userQuestions, setUserQuestions] = useState([]);\n  const handleInterview = async () => {\n    // Add user message to chatMessages\n    setChatMessages([...chatMessages, {\n      id: chatMessages.length,\n      text: interviewResponse,\n      sender: 'user'\n    }]);\n\n    // Call OpenAI API to get AI response\n    try {\n      const aiResponse = await getOpenAIResponse(chatMessages);\n      setChatMessages([...chatMessages, {\n        id: chatMessages.length,\n        text: aiResponse,\n        sender: 'ai'\n      }]);\n    } catch (error) {\n      // Handle error if needed\n    }\n    console.log(\"chatMessages\", chatMessages);\n    // Clear user input\n    setInterviewResponse('');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      style: {\n        width: '300px',\n        padding: '20px',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        style: {\n          maxHeight: '300px',\n          overflowY: 'auto',\n          border: '1px solid #ccc',\n          padding: '10px'\n        },\n        children: chatMessages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          style: {\n            marginBottom: '8px',\n            padding: '8px',\n            borderRadius: '8px',\n            backgroundColor: message.sender === 'ai' ? '#4CAF50' : '#2196F3',\n            color: '#fff'\n          },\n          children: message.text\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          variant: \"outlined\",\n          label: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          value: interviewResponse,\n          onChange: e => setInterviewResponse(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          style: {\n            marginTop: '10px'\n          },\n          onClick: handleInterview,\n          children: \"\\uC778\\uD130\\uBDF0 \\uC2DC\\uC791\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(InterviewComponent, \"2krawF1JTr+RNqYzOKGIBUvcutE=\");\n_c = InterviewComponent;\nexport default InterviewComponent;\nvar _c;\n$RefreshReg$(_c, \"InterviewComponent\");","map":{"version":3,"names":["React","useState","Button","Container","Paper","TextField","List","ListItem","getOpenAIResponse","jsxDEV","_jsxDEV","InterviewComponent","_s","interviewResponse","setInterviewResponse","chatMessages","setChatMessages","userQuestions","setUserQuestions","handleInterview","id","length","text","sender","aiResponse","error","console","log","style","marginTop","display","flexDirection","alignItems","children","elevation","width","padding","maxHeight","overflowY","border","map","message","marginBottom","borderRadius","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","variant","label","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/AIchat/AIchat.jsx"],"sourcesContent":["// InterviewComponent.js\nimport React, { useState } from 'react';\nimport { Button, Container, Paper, TextField, List, ListItem } from '@mui/material';\nimport { getOpenAIResponse } from './server';  // Adjust the path based on your project structure\n\nconst InterviewComponent = () => {\n  const [interviewResponse, setInterviewResponse] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [userQuestions, setUserQuestions] = useState([]);\n\n  const handleInterview = async () => {\n    // Add user message to chatMessages\n    setChatMessages([...chatMessages, { id: chatMessages.length, text: interviewResponse, sender: 'user' }]);\n\n    // Call OpenAI API to get AI response\n    try {\n      const aiResponse = await getOpenAIResponse(chatMessages);\n      setChatMessages([...chatMessages, { id: chatMessages.length, text: aiResponse, sender: 'ai' }]);\n    } catch (error) {\n      // Handle error if needed\n    }\n    console.log(\"chatMessages\",chatMessages)\n    // Clear user input\n    setInterviewResponse('');\n  };\n\n  return (\n    <Container style={{ marginTop: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      <Paper elevation={3} style={{ width: '300px', padding: '20px', display: 'flex', flexDirection: 'column' }}>\n        <List style={{ maxHeight: '300px', overflowY: 'auto', border: '1px solid #ccc', padding: '10px' }}>\n          {chatMessages.map(message => (\n            <ListItem\n              key={message.id}\n              style={{\n                marginBottom: '8px',\n                padding: '8px',\n                borderRadius: '8px',\n                backgroundColor: message.sender === 'ai' ? '#4CAF50' : '#2196F3',\n                color: '#fff',\n              }}\n            >\n              {message.text}\n            </ListItem>\n          ))}\n        </List>\n        <div style={{ marginTop: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            label=\"메시지를 입력하세요...\"\n            value={interviewResponse}\n            onChange={(e) => setInterviewResponse(e.target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: '10px' }}\n            onClick={handleInterview}\n          >\n            인터뷰 시작\n          </Button>\n        </div>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default InterviewComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AACnF,SAASC,iBAAiB,QAAQ,UAAU,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC;IACAH,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;MAAEK,EAAE,EAAEL,YAAY,CAACM,MAAM;MAAEC,IAAI,EAAET,iBAAiB;MAAEU,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;;IAExG;IACA,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMhB,iBAAiB,CAACO,YAAY,CAAC;MACxDC,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;QAAEK,EAAE,EAAEL,YAAY,CAACM,MAAM;QAAEC,IAAI,EAAEE,UAAU;QAAED,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;IACjG,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd;IAAA;IAEFC,OAAO,CAACC,GAAG,CAAC,cAAc,EAACZ,YAAY,CAAC;IACxC;IACAD,oBAAoB,CAAC,EAAE,CAAC;EAC1B,CAAC;EAED,oBACEJ,OAAA,CAACP,SAAS;IAACyB,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,eACtGvB,OAAA,CAACN,KAAK;MAAC8B,SAAS,EAAE,CAAE;MAACN,KAAK,EAAE;QAAEO,KAAK,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEN,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAS,CAAE;MAAAE,QAAA,gBACxGvB,OAAA,CAACJ,IAAI;QAACsB,KAAK,EAAE;UAAES,SAAS,EAAE,OAAO;UAAEC,SAAS,EAAE,MAAM;UAAEC,MAAM,EAAE,gBAAgB;UAAEH,OAAO,EAAE;QAAO,CAAE;QAAAH,QAAA,EAC/FlB,YAAY,CAACyB,GAAG,CAACC,OAAO,iBACvB/B,OAAA,CAACH,QAAQ;UAEPqB,KAAK,EAAE;YACLc,YAAY,EAAE,KAAK;YACnBN,OAAO,EAAE,KAAK;YACdO,YAAY,EAAE,KAAK;YACnBC,eAAe,EAAEH,OAAO,CAAClB,MAAM,KAAK,IAAI,GAAG,SAAS,GAAG,SAAS;YAChEsB,KAAK,EAAE;UACT,CAAE;UAAAZ,QAAA,EAEDQ,OAAO,CAACnB;QAAI,GATRmB,OAAO,CAACrB,EAAE;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUP,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACPvC,OAAA;QAAKkB,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAC,QAAA,gBAChGvB,OAAA,CAACL,SAAS;UACR6C,SAAS;UACTC,OAAO,EAAC,UAAU;UAClBC,KAAK,EAAC,4DAAe;UACrBC,KAAK,EAAExC,iBAAkB;UACzByC,QAAQ,EAAGC,CAAC,IAAKzC,oBAAoB,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eACFvC,OAAA,CAACR,MAAM;UACLiD,OAAO,EAAC,WAAW;UACnBN,KAAK,EAAC,SAAS;UACfjB,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO,CAAE;UAC7B4B,OAAO,EAAEtC,eAAgB;UAAAc,QAAA,EAC1B;QAED;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB,CAAC;AAACrC,EAAA,CA5DID,kBAAkB;AAAA+C,EAAA,GAAlB/C,kBAAkB;AA8DxB,eAAeA,kBAAkB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}