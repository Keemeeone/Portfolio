{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Wrapper/Scroll.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../Header/Header\";\nimport Motion from \"./Motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scroll = ({\n  components\n}) => {\n  _s();\n  var _scrollRef$current, _scrollRef$current2;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const scrollRef = useRef();\n  const minComponentHeightRef = useRef(0);\n  useEffect(() => {\n    const handleResize = () => {\n      if (scrollRef.current) {\n        const componentHeight = scrollRef.current.clientHeight;\n        minComponentHeightRef.current = componentHeight;\n        const newIndex = Math.floor(scrollRef.current.scrollTop / componentHeight);\n        setActiveIndex(newIndex);\n      }\n    };\n    if (scrollRef.current) {\n      window.addEventListener(\"resize\", handleResize);\n      return () => {\n        window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, []);\n  const handleScroll = () => {\n    if (scrollRef.current) {\n      const scrollTop = scrollRef.current.scrollTop;\n      const componentHeight = scrollRef.current.clientHeight;\n      minComponentHeightRef.current = Math.min(minComponentHeightRef.current, componentHeight);\n      const newIndex = Math.floor(scrollTop / minComponentHeightRef.current);\n      setActiveIndex(newIndex);\n      setScrollPosition(scrollTop);\n    }\n  };\n  const calculateOpacity = index => {\n    if (scrollRef.current) {\n      const distanceToComponent = Math.abs(scrollPosition - index * minComponentHeightRef.current);\n      const maxDistance = minComponentHeightRef.current * 0.5;\n      const opacity = 1 - Math.min(distanceToComponent / maxDistance, 1);\n      return opacity;\n    }\n    return 1;\n  };\n  const scrollToComponent = index => {\n    if (scrollRef.current) {\n      const componentHeight = minComponentHeightRef.current;\n      scrollRef.current.scrollTo({\n        top: index * componentHeight,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const updateSlideState = index => {\n    scrollToComponent(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef,\n    onScroll: handleScroll,\n    style: {\n      height: \"100vh\",\n      overflowY: \"scroll\",\n      scrollBehavior: \"smooth\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: 'vertical',\n      length: components.length,\n      currIdx: activeIndex,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), scrollPosition !== 0 && /*#__PURE__*/_jsxDEV(Motion, {\n      scrollPosition: scrollPosition,\n      scrollHeight: (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollHeight,\n      clientHeight: (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.clientHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), components.map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        minHeight: minComponentHeightRef.current,\n        opacity: calculateOpacity(index),\n        transition: \"opacity 0.2s ease-in-out\"\n      },\n      children: /*#__PURE__*/React.cloneElement(component, {\n        isActive: index === activeIndex,\n        scrollPosition\n      })\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Scroll, \"R4rGPcMdzgw/LEwqmzcCyWOLSlw=\");\n_c = Scroll;\nexport default Scroll;\nvar _c;\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","Motion","jsxDEV","_jsxDEV","Scroll","components","_s","_scrollRef$current","_scrollRef$current2","activeIndex","setActiveIndex","scrollPosition","setScrollPosition","scrollRef","minComponentHeightRef","handleResize","current","componentHeight","clientHeight","newIndex","Math","floor","scrollTop","window","addEventListener","removeEventListener","handleScroll","min","calculateOpacity","index","distanceToComponent","abs","maxDistance","opacity","scrollToComponent","scrollTo","top","behavior","updateSlideState","ref","onScroll","style","height","overflowY","scrollBehavior","children","orientation","length","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","scrollHeight","map","component","minHeight","transition","cloneElement","isActive","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Wrapper/Scroll.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nimport Header from \"../Header/Header\";\nimport Motion from \"./Motion\";\n\nconst Scroll = ({ components }) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const scrollRef = useRef();\n    const minComponentHeightRef = useRef(0);\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (scrollRef.current) {\n                const componentHeight = scrollRef.current.clientHeight;\n                minComponentHeightRef.current = componentHeight;\n                const newIndex = Math.floor(scrollRef.current.scrollTop / componentHeight);\n                setActiveIndex(newIndex);\n            }\n        };\n\n        if (scrollRef.current) {\n            window.addEventListener(\"resize\", handleResize);\n\n            return () => {\n                window.removeEventListener(\"resize\", handleResize);\n            };\n        }\n    }, []);\n\n    const handleScroll = () => {\n        if (scrollRef.current) {\n            const scrollTop = scrollRef.current.scrollTop;\n            const componentHeight = scrollRef.current.clientHeight;\n\n            minComponentHeightRef.current = Math.min(\n                minComponentHeightRef.current,\n                componentHeight\n            );\n\n            const newIndex = Math.floor(scrollTop / minComponentHeightRef.current);\n            setActiveIndex(newIndex);\n\n            setScrollPosition(scrollTop);\n        }\n    };\n\n    const calculateOpacity = (index) => {\n        if (scrollRef.current) {\n            const distanceToComponent = Math.abs(scrollPosition - index * minComponentHeightRef.current);\n            const maxDistance = minComponentHeightRef.current * 0.5;\n            const opacity = 1 - Math.min(distanceToComponent / maxDistance, 1);\n\n            return opacity;\n        }\n\n        return 1;\n    };\n\n    const scrollToComponent = (index) => {\n        if (scrollRef.current) {\n            const componentHeight = minComponentHeightRef.current;\n            scrollRef.current.scrollTo({\n                top: index * componentHeight,\n                behavior: \"smooth\",\n            });\n        }\n    };\n\n    const updateSlideState = (index) => {\n        scrollToComponent(index);\n    };\n\n    return (\n        <div\n            ref={scrollRef}\n            onScroll={handleScroll}\n            style={{\n                height: \"100vh\",\n                overflowY: \"scroll\",\n                scrollBehavior: \"smooth\",\n            }}\n        >\n            <Header\n                orientation={'vertical'}\n                length={components.length}\n                currIdx={activeIndex}\n                clickHandler={updateSlideState}\n            />\n            {scrollPosition !== 0 && (\n                <Motion\n                    scrollPosition={scrollPosition}\n                    scrollHeight={scrollRef.current?.scrollHeight}\n                    clientHeight={scrollRef.current?.clientHeight}\n                />\n            )}\n            \n            {components.map((component, index) => (\n                <div\n                    key={index}\n                    style={{\n                        height: \"100%\",\n                        minHeight: minComponentHeightRef.current,\n                        opacity: calculateOpacity(index),\n                        transition: \"opacity 0.2s ease-in-out\",\n                    }}\n                >\n                    {React.cloneElement(component, { isActive: index === activeIndex, scrollPosition })}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Scroll;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}