{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Wrapper/Scroll.jsx\",\n  _s = $RefreshSig$();\n// Scroll.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../Header/Header\";\nimport Motion from \"./Motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scroll = ({\n  components\n}) => {\n  _s();\n  var _scrollRef$current, _scrollRef$current2;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const updateComponentHeight = () => {\n      if (scrollRef.current) {\n        const componentHeight = scrollRef.current.clientHeight;\n        components.forEach((component, index) => {\n          const minHeight = component.props.minHeight || 0;\n          const newHeight = Math.max(componentHeight, minHeight);\n          component.props.style = {\n            ...component.props.style,\n            height: `${newHeight}px`\n          };\n        });\n      }\n    };\n    updateComponentHeight();\n    window.addEventListener(\"resize\", updateComponentHeight);\n    return () => {\n      window.removeEventListener(\"resize\", updateComponentHeight);\n    };\n  }, [components]);\n  const handleScroll = () => {\n    if (scrollRef.current) {\n      const scrollTop = scrollRef.current.scrollTop;\n      const componentHeight = scrollRef.current.clientHeight;\n      const newIndex = Math.floor(scrollTop / componentHeight);\n      setActiveIndex(newIndex);\n      setScrollPosition(scrollTop);\n    }\n  };\n  const calculateOpacity = index => {\n    if (scrollRef.current) {\n      const componentHeight = scrollRef.current.clientHeight;\n      const distanceToComponent = Math.abs(scrollPosition - index * componentHeight);\n      const maxDistance = componentHeight * 0.5;\n      const opacity = 1 - Math.min(distanceToComponent / maxDistance, 1);\n      return opacity;\n    }\n    return 1;\n  };\n  const scrollToComponent = index => {\n    if (scrollRef.current) {\n      const componentHeight = scrollRef.current.clientHeight;\n      scrollRef.current.scrollTo({\n        top: index * componentHeight,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const updateSlideState = index => {\n    scrollToComponent(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef,\n    onScroll: handleScroll,\n    style: {\n      height: \"100vh\",\n      overflowY: \"scroll\",\n      scrollBehavior: \"smooth\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: 'vertical',\n      length: components.length,\n      currIdx: activeIndex,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), scrollPosition !== 0 && /*#__PURE__*/_jsxDEV(Motion, {\n      scrollPosition: scrollPosition,\n      scrollHeight: (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollHeight,\n      clientHeight: (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.clientHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this), components.map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"auto\",\n        opacity: calculateOpacity(index),\n        transition: \"opacity 0.2s ease-in-out\",\n        minHeight: component.props.minHeight || 0\n      },\n      children: /*#__PURE__*/React.cloneElement(component, {\n        isActive: index === activeIndex,\n        scrollPosition\n      })\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Scroll, \"yOwCwCtz2x3WHvcMgWmNpphXtBM=\");\n_c = Scroll;\nexport default Scroll;\nvar _c;\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","Motion","jsxDEV","_jsxDEV","Scroll","components","_s","_scrollRef$current","_scrollRef$current2","activeIndex","setActiveIndex","scrollPosition","setScrollPosition","scrollRef","updateComponentHeight","current","componentHeight","clientHeight","forEach","component","index","minHeight","props","newHeight","Math","max","style","height","window","addEventListener","removeEventListener","handleScroll","scrollTop","newIndex","floor","calculateOpacity","distanceToComponent","abs","maxDistance","opacity","min","scrollToComponent","scrollTo","top","behavior","updateSlideState","ref","onScroll","overflowY","scrollBehavior","children","orientation","length","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","scrollHeight","map","transition","cloneElement","isActive","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Wrapper/Scroll.jsx"],"sourcesContent":["// Scroll.jsx\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nimport Header from \"../Header/Header\";\nimport Motion from \"./Motion\";\n\nconst Scroll = ({ components }) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const scrollRef = useRef();\n\n    useEffect(() => {\n        const updateComponentHeight = () => {\n            if (scrollRef.current) {\n                const componentHeight = scrollRef.current.clientHeight;\n                components.forEach((component, index) => {\n                    const minHeight = component.props.minHeight || 0;\n                    const newHeight = Math.max(componentHeight, minHeight);\n                    component.props.style = { ...component.props.style, height: `${newHeight}px` };\n                });\n            }\n        };\n\n        updateComponentHeight();\n\n        window.addEventListener(\"resize\", updateComponentHeight);\n\n        return () => {\n            window.removeEventListener(\"resize\", updateComponentHeight);\n        };\n    }, [components]);\n\n    const handleScroll = () => {\n        if (scrollRef.current) {\n            const scrollTop = scrollRef.current.scrollTop;\n            const componentHeight = scrollRef.current.clientHeight;\n\n            const newIndex = Math.floor(scrollTop / componentHeight);\n            setActiveIndex(newIndex);\n\n            setScrollPosition(scrollTop);\n        }\n    };\n\n    const calculateOpacity = (index) => {\n        if (scrollRef.current) {\n            const componentHeight = scrollRef.current.clientHeight;\n            const distanceToComponent = Math.abs(scrollPosition - index * componentHeight);\n            const maxDistance = componentHeight * 0.5;\n\n            const opacity = 1 - Math.min(distanceToComponent / maxDistance, 1);\n\n            return opacity;\n        }\n\n        return 1;\n    };\n\n    const scrollToComponent = (index) => {\n        if (scrollRef.current) {\n            const componentHeight = scrollRef.current.clientHeight;\n            scrollRef.current.scrollTo({\n                top: index * componentHeight,\n                behavior: \"smooth\",\n            });\n        }\n    };\n\n    const updateSlideState = (index) => {\n        scrollToComponent(index);\n    };\n\n    return (\n        <div\n            ref={scrollRef}\n            onScroll={handleScroll}\n            style={{\n                height: \"100vh\",\n                overflowY: \"scroll\",\n                scrollBehavior: \"smooth\",\n            }}\n        >\n            <Header\n                orientation={'vertical'}\n                length={components.length}\n                currIdx={activeIndex}\n                clickHandler={updateSlideState}\n            />\n            {scrollPosition !== 0 && (\n                <Motion\n                    scrollPosition={scrollPosition}\n                    scrollHeight={scrollRef.current?.scrollHeight}\n                    clientHeight={scrollRef.current?.clientHeight}\n                />\n            )}\n            \n            {components.map((component, index) => (\n                <div\n                    key={index}\n                    style={{\n                        height: \"auto\",\n                        opacity: calculateOpacity(index),\n                        transition: \"opacity 0.2s ease-in-out\",\n                        minHeight: component.props.minHeight || 0,\n                    }}\n                >\n                    {React.cloneElement(component, { isActive: index === activeIndex, scrollPosition })}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Scroll;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,kBAAA,EAAAC,mBAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMgB,SAAS,GAAGd,MAAM,CAAC,CAAC;EAE1BD,SAAS,CAAC,MAAM;IACZ,MAAMgB,qBAAqB,GAAGA,CAAA,KAAM;MAChC,IAAID,SAAS,CAACE,OAAO,EAAE;QACnB,MAAMC,eAAe,GAAGH,SAAS,CAACE,OAAO,CAACE,YAAY;QACtDZ,UAAU,CAACa,OAAO,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;UACrC,MAAMC,SAAS,GAAGF,SAAS,CAACG,KAAK,CAACD,SAAS,IAAI,CAAC;UAChD,MAAME,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACT,eAAe,EAAEK,SAAS,CAAC;UACtDF,SAAS,CAACG,KAAK,CAACI,KAAK,GAAG;YAAE,GAAGP,SAAS,CAACG,KAAK,CAACI,KAAK;YAAEC,MAAM,EAAG,GAAEJ,SAAU;UAAI,CAAC;QAClF,CAAC,CAAC;MACN;IACJ,CAAC;IAEDT,qBAAqB,CAAC,CAAC;IAEvBc,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEf,qBAAqB,CAAC;IAExD,OAAO,MAAM;MACTc,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEhB,qBAAqB,CAAC;IAC/D,CAAC;EACL,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,MAAM0B,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIlB,SAAS,CAACE,OAAO,EAAE;MACnB,MAAMiB,SAAS,GAAGnB,SAAS,CAACE,OAAO,CAACiB,SAAS;MAC7C,MAAMhB,eAAe,GAAGH,SAAS,CAACE,OAAO,CAACE,YAAY;MAEtD,MAAMgB,QAAQ,GAAGT,IAAI,CAACU,KAAK,CAACF,SAAS,GAAGhB,eAAe,CAAC;MACxDN,cAAc,CAACuB,QAAQ,CAAC;MAExBrB,iBAAiB,CAACoB,SAAS,CAAC;IAChC;EACJ,CAAC;EAED,MAAMG,gBAAgB,GAAIf,KAAK,IAAK;IAChC,IAAIP,SAAS,CAACE,OAAO,EAAE;MACnB,MAAMC,eAAe,GAAGH,SAAS,CAACE,OAAO,CAACE,YAAY;MACtD,MAAMmB,mBAAmB,GAAGZ,IAAI,CAACa,GAAG,CAAC1B,cAAc,GAAGS,KAAK,GAAGJ,eAAe,CAAC;MAC9E,MAAMsB,WAAW,GAAGtB,eAAe,GAAG,GAAG;MAEzC,MAAMuB,OAAO,GAAG,CAAC,GAAGf,IAAI,CAACgB,GAAG,CAACJ,mBAAmB,GAAGE,WAAW,EAAE,CAAC,CAAC;MAElE,OAAOC,OAAO;IAClB;IAEA,OAAO,CAAC;EACZ,CAAC;EAED,MAAME,iBAAiB,GAAIrB,KAAK,IAAK;IACjC,IAAIP,SAAS,CAACE,OAAO,EAAE;MACnB,MAAMC,eAAe,GAAGH,SAAS,CAACE,OAAO,CAACE,YAAY;MACtDJ,SAAS,CAACE,OAAO,CAAC2B,QAAQ,CAAC;QACvBC,GAAG,EAAEvB,KAAK,GAAGJ,eAAe;QAC5B4B,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIzB,KAAK,IAAK;IAChCqB,iBAAiB,CAACrB,KAAK,CAAC;EAC5B,CAAC;EAED,oBACIjB,OAAA;IACI2C,GAAG,EAAEjC,SAAU;IACfkC,QAAQ,EAAEhB,YAAa;IACvBL,KAAK,EAAE;MACHC,MAAM,EAAE,OAAO;MACfqB,SAAS,EAAE,QAAQ;MACnBC,cAAc,EAAE;IACpB,CAAE;IAAAC,QAAA,gBAEF/C,OAAA,CAACH,MAAM;MACHmD,WAAW,EAAE,UAAW;MACxBC,MAAM,EAAE/C,UAAU,CAAC+C,MAAO;MAC1BC,OAAO,EAAE5C,WAAY;MACrB6C,YAAY,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACD/C,cAAc,KAAK,CAAC,iBACjBR,OAAA,CAACF,MAAM;MACHU,cAAc,EAAEA,cAAe;MAC/BgD,YAAY,GAAApD,kBAAA,GAAEM,SAAS,CAACE,OAAO,cAAAR,kBAAA,uBAAjBA,kBAAA,CAAmBoD,YAAa;MAC9C1C,YAAY,GAAAT,mBAAA,GAAEK,SAAS,CAACE,OAAO,cAAAP,mBAAA,uBAAjBA,mBAAA,CAAmBS;IAAa;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACJ,EAEArD,UAAU,CAACuD,GAAG,CAAC,CAACzC,SAAS,EAAEC,KAAK,kBAC7BjB,OAAA;MAEIuB,KAAK,EAAE;QACHC,MAAM,EAAE,MAAM;QACdY,OAAO,EAAEJ,gBAAgB,CAACf,KAAK,CAAC;QAChCyC,UAAU,EAAE,0BAA0B;QACtCxC,SAAS,EAAEF,SAAS,CAACG,KAAK,CAACD,SAAS,IAAI;MAC5C,CAAE;MAAA6B,QAAA,eAEDtD,KAAK,CAACkE,YAAY,CAAC3C,SAAS,EAAE;QAAE4C,QAAQ,EAAE3C,KAAK,KAAKX,WAAW;QAAEE;MAAe,CAAC;IAAC,GAR9ES,KAAK;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAST,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACpD,EAAA,CA1GIF,MAAM;AAAA4D,EAAA,GAAN5D,MAAM;AA4GZ,eAAeA,MAAM;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}