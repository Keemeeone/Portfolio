{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scroll = ({\n  components\n}) => {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const scrollRef = useRef();\n  const domTarget = useRef(null);\n  const handleScroll = () => {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.8\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const scrollTop = scrollRef.current.scrollTop;\n          const componentHeight = scrollRef.current.clientHeight;\n          const newIndex = Math.floor(scrollTop / componentHeight);\n          setActiveIndex(newIndex);\n          setScrollPosition(scrollTop);\n        } else {\n          setActiveIndex(0);\n        }\n      });\n    }, options);\n    if (domTarget.current) {\n      observer.observe(domTarget.current);\n    }\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      const componentHeight = scrollRef.current.clientHeight;\n      const newIndex = Math.floor(scrollRef.current.scrollTop / componentHeight);\n      setActiveIndex(newIndex);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const scrollToComponent = index => {\n    const componentHeight = scrollRef.current.clientHeight;\n    scrollRef.current.scrollTo({\n      top: index * componentHeight,\n      behavior: \"smooth\"\n    });\n  };\n  const updateSlideState = index => {\n    scrollToComponent(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef,\n    onScroll: handleScroll,\n    style: {\n      height: \"100vh\",\n      overflowY: \"scroll\",\n      scrollBehavior: \"smooth\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: 'vertical',\n      length: components.length,\n      currIdx: activeIndex,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.div, {\n      ref: domTarget,\n      style: {\n        opacity: springProps.opacity,\n        transition: \"opacity 0.3s ease\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), components.map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/React.cloneElement(component, {\n        isActive: index === activeIndex,\n        scrollPosition\n      })\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(Scroll, \"TWIlLZkBDSEVojsDdeVAn3+4NXU=\");\n_c = Scroll;\nexport default Scroll;\nvar _c;\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","jsxDEV","_jsxDEV","Scroll","components","_s","activeIndex","setActiveIndex","scrollPosition","setScrollPosition","scrollRef","domTarget","handleScroll","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollTop","current","componentHeight","clientHeight","newIndex","Math","floor","observe","handleResize","window","addEventListener","removeEventListener","scrollToComponent","index","scrollTo","top","behavior","updateSlideState","ref","onScroll","style","height","overflowY","scrollBehavior","children","orientation","length","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","animated","div","opacity","springProps","transition","map","component","cloneElement","isActive","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../Header/Header\";\n\nconst Scroll = ({ components }) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const scrollRef = useRef();\n\n    const domTarget = useRef(null);\n\n    const handleScroll = () => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.8,\n        };\n\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    const scrollTop = scrollRef.current.scrollTop;\n                    const componentHeight = scrollRef.current.clientHeight;\n                    const newIndex = Math.floor(scrollTop / componentHeight);\n                    setActiveIndex(newIndex);\n                    setScrollPosition(scrollTop);\n                } else {\n                    setActiveIndex(0);\n                }\n            });\n        }, options);     \n        \n        if (domTarget.current) {\n            observer.observe(domTarget.current);\n        }   \n    };\n\n    useEffect(() => {\n        const handleResize = () => {\n            const componentHeight = scrollRef.current.clientHeight;\n            const newIndex = Math.floor(scrollRef.current.scrollTop / componentHeight);\n            setActiveIndex(newIndex);\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n\n    const scrollToComponent = (index) => {\n        const componentHeight = scrollRef.current.clientHeight;\n        scrollRef.current.scrollTo({\n            top: index * componentHeight,\n            behavior: \"smooth\",\n        });\n    };\n\n    const updateSlideState = (index) => {\n        scrollToComponent(index);\n    };\n\n    return (\n        <div\n            ref={scrollRef}\n            onScroll={handleScroll}\n            style={{\n                height: \"100vh\",\n                overflowY: \"scroll\",\n                scrollBehavior: \"smooth\",\n            }}\n        >\n            <Header\n                orientation={'vertical'}\n                length={components.length}\n                currIdx={activeIndex}\n                clickHandler={updateSlideState}\n            />\n            <animated.div\n                ref={domTarget}\n                style={{\n                    opacity: springProps.opacity,\n                    transition: \"opacity 0.3s ease\",\n                }}\n            ></animated.div>\n            {components.map((component, index) => (\n                <div key={index} style={{ height: \"100vh\" }}>\n                    {React.cloneElement(component, { isActive: index === activeIndex, scrollPosition })}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Scroll;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}