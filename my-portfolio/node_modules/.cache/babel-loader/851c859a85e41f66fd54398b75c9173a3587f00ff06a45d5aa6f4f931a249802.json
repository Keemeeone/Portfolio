{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  children\n}) => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    await loadSlim(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  useEffect(() => {\n    let particlesRef = null;\n    const initializeParticles = async () => {\n      // 파티클 초기화\n      if (particlesRef) {\n        await particlesRef.destroy();\n      }\n      particlesRef = new Particles();\n      particlesRef.init();\n      particlesRef.load(\"tsparticles\", {\n        background: {\n          color: {\n            value: \"#327C57\"\n          }\n        }\n        // ... 여러 다른 설정들 ...\n      });\n    };\n\n    // 컴포넌트 마운트 시 파티클 초기화\n    initializeParticles();\n\n    // 컴포넌트가 언마운트될 때 파티클 시스템 제거\n    return () => {\n      if (particlesRef) {\n        particlesRef.destroy();\n      }\n    };\n  }, [particlesInit, particlesLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    role: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded,\n      options: {\n        // 파티클 옵션들...\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"Jf1jpKmzflxPXCcd4CVUAms78tY=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useCallback","Particles","loadSlim","jsxDEV","_jsxDEV","Main","children","_s","particlesInit","engine","particlesLoaded","container","console","log","particlesRef","initializeParticles","destroy","init","load","background","color","value","id","role","loaded","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Main.jsx"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadSlim } from \"tsparticles-slim\";\n\nconst Main = ({ children }) => {\n    const particlesInit = useCallback(async (engine) => {\n        await loadSlim(engine);\n    }, []);\n\n    const particlesLoaded = useCallback(async (container) => {\n        await console.log(container);\n    }, []);\n\n    useEffect(() => {\n        let particlesRef = null;\n\n        const initializeParticles = async () => {\n            // 파티클 초기화\n            if (particlesRef) {\n                await particlesRef.destroy();\n            }\n            particlesRef = new Particles();\n            particlesRef.init();\n            particlesRef.load(\"tsparticles\", {\n                background: {\n                    color: {\n                        value: \"#327C57\",\n                    },\n                },\n                // ... 여러 다른 설정들 ...\n            });\n        };\n\n        // 컴포넌트 마운트 시 파티클 초기화\n        initializeParticles();\n\n        // 컴포넌트가 언마운트될 때 파티클 시스템 제거\n        return () => {\n            if (particlesRef) {\n                particlesRef.destroy();\n            }\n        };\n    }, [particlesInit, particlesLoaded]);\n\n    return (\n        <main id=\"main\" role=\"main\">\n            <Particles\n                id=\"tsparticles\"\n                init={particlesInit}\n                loaded={particlesLoaded}\n                options={{\n                    // 파티클 옵션들...\n                }}\n            />\n            {children}\n        </main>\n    );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACrD,OAAOC,SAAS,MAAM,iBAAiB;AACvC,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,aAAa,GAAGR,WAAW,CAAC,MAAOS,MAAM,IAAK;IAChD,MAAMP,QAAQ,CAACO,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAGV,WAAW,CAAC,MAAOW,SAAS,IAAK;IACrD,MAAMC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACZ,IAAIe,YAAY,GAAG,IAAI;IAEvB,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC;MACA,IAAID,YAAY,EAAE;QACd,MAAMA,YAAY,CAACE,OAAO,CAAC,CAAC;MAChC;MACAF,YAAY,GAAG,IAAIb,SAAS,CAAC,CAAC;MAC9Ba,YAAY,CAACG,IAAI,CAAC,CAAC;MACnBH,YAAY,CAACI,IAAI,CAAC,aAAa,EAAE;QAC7BC,UAAU,EAAE;UACRC,KAAK,EAAE;YACHC,KAAK,EAAE;UACX;QACJ;QACA;MACJ,CAAC,CAAC;IACN,CAAC;;IAED;IACAN,mBAAmB,CAAC,CAAC;;IAErB;IACA,OAAO,MAAM;MACT,IAAID,YAAY,EAAE;QACdA,YAAY,CAACE,OAAO,CAAC,CAAC;MAC1B;IACJ,CAAC;EACL,CAAC,EAAE,CAACR,aAAa,EAAEE,eAAe,CAAC,CAAC;EAEpC,oBACIN,OAAA;IAAMkB,EAAE,EAAC,MAAM;IAACC,IAAI,EAAC,MAAM;IAAAjB,QAAA,gBACvBF,OAAA,CAACH,SAAS;MACNqB,EAAE,EAAC,aAAa;MAChBL,IAAI,EAAET,aAAc;MACpBgB,MAAM,EAAEd,eAAgB;MACxBe,OAAO,EAAE;QACL;MAAA;IACF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACDvB,QAAQ;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACtB,EAAA,CArDIF,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AAuDV,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}