{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SkillCard = ({\n  skill\n}) => {\n  _s();\n  const [circlePosition, setCirclePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const handleMouseMove = e => {\n    const x = e.clientX;\n    const y = e.clientY;\n\n    // Calculate adjusted coordinates to center the circle just above the mouse\n    const adjustedX = x - 20 / 2; // Assuming circle size is 20vh\n    const adjustedY = y - 20 - 5; // 5 is an additional offset to place it just above the mouse\n\n    // Ensure the circle stays within the bounds of the image\n    const maxX = window.innerWidth - 20; // Assuming circle size is 20vh\n    const maxY = window.innerHeight - 20; // Assuming circle size is 20vh\n\n    const clampedX = Math.max(0, Math.min(adjustedX, maxX));\n    const clampedY = Math.max(0, Math.min(adjustedY, maxY));\n    setCirclePosition({\n      x: clampedX,\n      y: clampedY\n    });\n  };\n  const handleMouseLeave = () => {\n    setCirclePosition({\n      x: 0,\n      y: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        display: 'inline-block'\n      },\n      onMouseMove: handleMouseMove,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: skill.name,\n        style: {\n          maxWidth: \"100%\",\n          height: \"10vh\",\n          objectFit: \"cover\"\n        },\n        src: skill.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: `${circlePosition.y}px`,\n          left: `${circlePosition.x}px`,\n          // transform: 'translate(-50%, -50%)',\n          width: '20vh',\n          height: '20vh',\n          borderRadius: '50%',\n          backgroundColor: 'white',\n          border: '1px solid #FFF',\n          display: circlePosition.x === 0 && circlePosition.y === 0 ? 'none' : 'block'\n        },\n        children: skill.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SkillCard, \"pUlDpjloNlfyVHyVXnEi1Kg413o=\");\n_c = SkillCard;\nexport default SkillCard;\nvar _c;\n$RefreshReg$(_c, \"SkillCard\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","SkillCard","skill","_s","circlePosition","setCirclePosition","x","y","handleMouseMove","e","clientX","clientY","adjustedX","adjustedY","maxX","window","innerWidth","maxY","innerHeight","clampedX","Math","max","min","clampedY","handleMouseLeave","children","style","position","display","onMouseMove","onMouseLeave","alt","name","maxWidth","height","objectFit","src","image","fileName","_jsxFileName","lineNumber","columnNumber","top","left","width","borderRadius","backgroundColor","border","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\n\nconst SkillCard = ({ skill }) => {\n    const [circlePosition, setCirclePosition] = useState({ x: 0, y: 0 });\n\n    const handleMouseMove = (e) => {\n        const x = e.clientX;\n        const y = e.clientY;\n    \n        // Calculate adjusted coordinates to center the circle just above the mouse\n        const adjustedX = x - 20 / 2; // Assuming circle size is 20vh\n        const adjustedY = y - 20 - 5; // 5 is an additional offset to place it just above the mouse\n    \n        // Ensure the circle stays within the bounds of the image\n        const maxX = window.innerWidth - 20; // Assuming circle size is 20vh\n        const maxY = window.innerHeight - 20; // Assuming circle size is 20vh\n    \n        const clampedX = Math.max(0, Math.min(adjustedX, maxX));\n        const clampedY = Math.max(0, Math.min(adjustedY, maxY));\n    \n        setCirclePosition({ x: clampedX, y: clampedY });\n    };\n    \n\n    const handleMouseLeave = () => {\n        setCirclePosition({ x: 0, y: 0 });\n    };\n\n    return (\n        <>\n            <div\n                style={{ position: 'relative', display: 'inline-block' }}\n                onMouseMove={handleMouseMove}\n                onMouseLeave={handleMouseLeave}\n            >\n                {/* 이미지를 감싸는 div를 추가하고 그 안에 이미지를 렌더링합니다. */}\n                <img\n                    alt={skill.name}\n                    style={{ maxWidth: \"100%\", height: \"10vh\", objectFit: \"cover\" }}\n                    src={skill.image}\n                />\n\n                {/* 동그라미를 표시할 div */}\n                <div\n                    style={{\n                        position: 'absolute',\n                        top: `${circlePosition.y}px`,\n                        left: `${circlePosition.x}px`,\n                        // transform: 'translate(-50%, -50%)',\n                        width: '20vh',\n                        height: '20vh',\n                        borderRadius: '50%',\n                        backgroundColor: 'white',\n                        border: '1px solid #FFF',\n                        display: circlePosition.x === 0 && circlePosition.y === 0 ? 'none' : 'block',\n                    }}\n                >{skill.name}</div>\n            </div>\n        </>\n    );\n};\n\nexport default SkillCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}