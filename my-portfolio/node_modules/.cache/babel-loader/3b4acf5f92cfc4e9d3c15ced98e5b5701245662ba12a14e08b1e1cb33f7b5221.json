{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx\",\n  _s = $RefreshSig$();\n// SkillCard.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useSpring, animated, to } from \"@react-spring/web\";\nimport { useGesture } from \"react-use-gesture\";\nimport { Card, CardContent, Typography, useTheme, responsiveFontSizes, ThemeProvider } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calcX = (y, ly) => -(y - ly - window.innerHeight / 2) / 20;\nconst calcY = (x, lx) => (x - lx - window.innerWidth / 2) / 20;\n\n/**\n * SkillCard component displaying a skill card with interactive animations.\n * @param {Object} props - Props for the SkillCard component.\n * @param {string} props.skill - The skill to be displayed on the card.\n */\nconst SkillCard = ({\n  skill\n}) => {\n  _s();\n  const theme = useTheme();\n  const responsiveTheme = responsiveFontSizes(theme);\n\n  // const domTarget = useRef(null);\n\n  const textVariants = {\n    initial: {\n      x: -500,\n      opacity: 0\n    },\n    animate: {\n      x: 0,\n      opacity: 1,\n      transition: {\n        duration: 1,\n        staggerChildren: 0.1\n      }\n    },\n    scrollButton: {\n      opacity: 0,\n      y: 10,\n      transition: {\n        duration: 2,\n        repeat: Infinity\n      }\n    }\n  };\n  const [{\n    x,\n    y,\n    rotateX,\n    rotateY,\n    rotateZ,\n    zoom,\n    scale,\n    color\n  }, api] = useSpring(() => ({\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    scale: 1,\n    zoom: 0,\n    x: 0,\n    y: 0,\n    color: getRandomColor(),\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }));\n  const [, wheelApi] = useSpring(() => ({\n    wheelY: 0\n  }));\n\n  // useGesture(\n  //     {\n  //         onDrag: ({ active, offset: [x, y] }) =>\n  //             api({ x, y, rotateX: 0, rotateY: 0, scale: active ? 1 : 1.1 }),\n  //         onPinch: ({ offset: [d, a] }) => api({ zoom: d / 200, rotateZ: a }),\n  //         onMove: ({ xy: [px, py], dragging }) =>\n  //             !dragging &&\n  //             api({\n  //                 rotateX: calcX(py, y.get()),\n  //                 rotateY: calcY(px, x.get()),\n  //                 scale: 1.1,\n  //             }),\n  //         onHover: ({ hovering }) =>\n  //             !hovering && api({ rotateX: 0, rotateY: 0, scale: 1 }),\n  //         onWheel: ({ event, offset: [, y] }) => {\n  //             wheelApi.set({ wheelY: y });\n  //         },\n  //     },\n  //     { domTarget, eventOptions: { passive: false } }\n  // );\n\n  // useEffect(() => {\n  //     const preventDefault = (e) => e.preventDefault();\n  //     document.addEventListener(\"gesturestart\", preventDefault);\n  //     document.addEventListener(\"gesturechange\", preventDefault);\n  //     const colorChangeInterval = setInterval(() => {\n  //         api.start({ color: getRandomColor() });\n  //     }, 2000); // 2초마다 색상 변경\n\n  //     return () => {\n  //         document.removeEventListener(\"gesturestart\", preventDefault);\n  //         document.removeEventListener(\"gesturechange\", preventDefault);\n  //         clearInterval(colorChangeInterval);\n  //     };\n  // }, [api]);\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: responsiveTheme,\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"slidingTextContainer\",\n      variants: sliderVariants,\n      initial: \"initial\",\n      animate: \"animate\",\n      style: {\n        position: 'absolute',\n        whiteS\n      },\n      children: skill\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(SkillCard, \"QVNXpN/jSyApMv2NGNPm1FXa1Jc=\", false, function () {\n  return [useTheme, useSpring, useSpring];\n});\n_c = SkillCard;\nexport default SkillCard;\nconst getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nvar _c;\n$RefreshReg$(_c, \"SkillCard\");","map":{"version":3,"names":["React","useRef","useEffect","useSpring","animated","to","useGesture","Card","CardContent","Typography","useTheme","responsiveFontSizes","ThemeProvider","motion","jsxDEV","_jsxDEV","calcX","y","ly","window","innerHeight","calcY","x","lx","innerWidth","SkillCard","skill","_s","theme","responsiveTheme","textVariants","initial","opacity","animate","transition","duration","staggerChildren","scrollButton","repeat","Infinity","rotateX","rotateY","rotateZ","zoom","scale","color","api","getRandomColor","config","mass","tension","friction","wheelApi","wheelY","children","div","className","variants","sliderVariants","style","position","whiteS","fileName","_jsxFileName","lineNumber","columnNumber","_c","letters","i","Math","floor","random","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx"],"sourcesContent":["// SkillCard.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useSpring, animated, to } from \"@react-spring/web\";\nimport { useGesture } from \"react-use-gesture\";\nimport { Card, CardContent, Typography, useTheme, responsiveFontSizes, ThemeProvider } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\n\n\nconst calcX = (y, ly) => -(y - ly - window.innerHeight / 2) / 20;\nconst calcY = (x, lx) => (x - lx - window.innerWidth / 2) / 20;\n\n/**\n * SkillCard component displaying a skill card with interactive animations.\n * @param {Object} props - Props for the SkillCard component.\n * @param {string} props.skill - The skill to be displayed on the card.\n */\nconst SkillCard = ({ skill }) => {\n    const theme = useTheme();\n    const responsiveTheme = responsiveFontSizes(theme);\n\n    // const domTarget = useRef(null);\n\n    const textVariants = {\n        initial: {\n            x: -500,\n            opacity: 0,\n        },\n        animate: {\n            x: 0,\n            opacity: 1,\n            transition: {\n                duration: 1,\n                staggerChildren: 0.1,\n            },\n        },\n        scrollButton: {\n            opacity: 0,\n            y: 10,\n            transition: {\n                duration: 2,\n                repeat: Infinity,\n            },\n        },\n    };\n\n    const [{ x, y, rotateX, rotateY, rotateZ, zoom, scale, color }, api] = useSpring(() => ({\n        rotateX: 0,\n        rotateY: 0,\n        rotateZ: 0,\n        scale: 1,\n        zoom: 0,\n        x: 0,\n        y: 0,\n        color: getRandomColor(),\n        config: { mass: 5, tension: 350, friction: 40 },\n    }));\n\n    const [, wheelApi] = useSpring(() => ({ wheelY: 0 }));\n\n    // useGesture(\n    //     {\n    //         onDrag: ({ active, offset: [x, y] }) =>\n    //             api({ x, y, rotateX: 0, rotateY: 0, scale: active ? 1 : 1.1 }),\n    //         onPinch: ({ offset: [d, a] }) => api({ zoom: d / 200, rotateZ: a }),\n    //         onMove: ({ xy: [px, py], dragging }) =>\n    //             !dragging &&\n    //             api({\n    //                 rotateX: calcX(py, y.get()),\n    //                 rotateY: calcY(px, x.get()),\n    //                 scale: 1.1,\n    //             }),\n    //         onHover: ({ hovering }) =>\n    //             !hovering && api({ rotateX: 0, rotateY: 0, scale: 1 }),\n    //         onWheel: ({ event, offset: [, y] }) => {\n    //             wheelApi.set({ wheelY: y });\n    //         },\n    //     },\n    //     { domTarget, eventOptions: { passive: false } }\n    // );\n\n    // useEffect(() => {\n    //     const preventDefault = (e) => e.preventDefault();\n    //     document.addEventListener(\"gesturestart\", preventDefault);\n    //     document.addEventListener(\"gesturechange\", preventDefault);\n    //     const colorChangeInterval = setInterval(() => {\n    //         api.start({ color: getRandomColor() });\n    //     }, 2000); // 2초마다 색상 변경\n\n    //     return () => {\n    //         document.removeEventListener(\"gesturestart\", preventDefault);\n    //         document.removeEventListener(\"gesturechange\", preventDefault);\n    //         clearInterval(colorChangeInterval);\n    //     };\n    // }, [api]);\n\n    return (\n        <ThemeProvider theme={responsiveTheme}>\n            {/* <animated.div\n                ref={domTarget}\n                style={{\n                    transform: \"perspective(150px)\",\n                    x,\n                    y,\n                    scale: to([scale, zoom], (s, z) => s + z),\n                    rotateX,\n                    rotateY,\n                    rotateZ,\n                    backgroundColor: color,\n                    boxShadow: \"0px 5px 15px rgba(0, 0, 0, 0.3)\",\n                    borderRadius: \"10px\",\n                    cursor: \"grab\",\n                    userSelect: \"none\",\n                    touchAction: 'none'\n                }}\n            > */}\n            {/* <Card variant=\"outlined\" sx={{ width: '85%', height: '100%' }}> */}\n            {/* <CardContent> */}\n            {/* <Typography fontWeight={\"bold\"} sx={{ marginLeft: { xs: '-15px', sm: '-5px', md: 'px' }, fontSize: { xs: '8px', sm: '8px', md: '16px' } }}> */}\n\n                \n                <motion.div\n        className=\"slidingTextContainer\"\n        variants={sliderVariants}\n        initial=\"initial\"\n        animate=\"animate\"\n        style={{position:'absolute', whiteS}}\n      >\n        {skill}\n      </motion.div>\n            \n            {/* </Typography> */}\n            {/* </CardContent> */}\n            {/* </Card> */}\n            {/* </animated.div> */}\n        </ThemeProvider>\n    );\n};\n\nexport default SkillCard;\n\nconst getRandomColor = () => {\n    const letters = \"0123456789ABCDEF\";\n    let color = \"#\";\n    for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}