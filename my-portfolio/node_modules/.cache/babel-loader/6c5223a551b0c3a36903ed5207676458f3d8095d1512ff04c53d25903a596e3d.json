{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import{Box,Slide,useMediaQuery,useTheme}from'@mui/material';import NavBar from'./Slides/NavBar';import Header from'../Header/Header';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Slides=props=>{const{components}=props;const transSpeed=500;const[slideState,setSlideState]=useState({currentIdx:0,previousIdx:0,isSwitching:false});const containerRef=useRef(null);useEffect(()=>{setSlideState(prevState=>({...prevState,currentIdx:0,previousIdx:0}));},[components]);const updateSlideState=useCallback(newIdx=>{setSlideState(prevState=>({...prevState,previousIdx:prevState.currentIdx,isSwitching:true}));window.setTimeout(()=>{setSlideState(prevState=>({...prevState,isSwitching:false,currentIdx:newIdx}));},transSpeed);},[transSpeed]);const isSmallScreen=useMediaQuery(useTheme().breakpoints.down('sm'));console.log(isSmallScreen);const scrollTimeout=useRef(null);const acceptScroll=useRef(true);let deltaY=0;let prevY=-1;let deltaX=0;let prevX=-1;const resetScroll=()=>{scrollTimeout.current=undefined;acceptScroll.current=true;deltaY=0;deltaX=0;};const handleScrollTimeout=()=>{if(deltaY>50&&slideState.currentIdx<components.length-1||deltaX>50&&slideState.currentIdx<components.length-1){updateSlideState(slideState.currentIdx+1);console.log(deltaY);}else if(deltaY<-50&&slideState.currentIdx>0||deltaX<-50&&slideState.currentIdx>0){updateSlideState(slideState.currentIdx-1);console.log(deltaY);}window.setTimeout(resetScroll,40);};const handleScrollEvent=e=>{if(scrollTimeout.current){clearTimeout(scrollTimeout.current);}scrollTimeout.current=window.setTimeout(handleScrollTimeout,40);if(e.type==='wheel'){if(!isSmallScreen){deltaY+=e.deltaY;}else{deltaX+=e.deltaX;}}else{if(!isSmallScreen){const y=e.targetTouches[0].clientY;if(prevY!==-1){deltaY+=prevY-y;}prevY=y;}else{const x=e.targetTouches[0].clientX;if(prevX!==-1){deltaX+=prevX-x;}prevX=x;}}};const slideStyle={width:'100%',height:'100%',position:'fixed'};const containerStyle={overflowY:'hidden'};return/*#__PURE__*/_jsxs(Box,{ref:containerRef,sx:{overscrollBehavior:'none',...containerStyle},onWheel:handleScrollEvent,onTouchMove:handleScrollEvent,children:[/*#__PURE__*/_jsx(Header,{orientation:isSmallScreen?'horizontal':'vertical',length:components.length,currIdx:slideState.currentIdx,clickHandler:updateSlideState}),/*#__PURE__*/_jsx(NavBar,{orientation:isSmallScreen?'horizontal':'vertical',length:components.length,currIdx:slideState.currentIdx,clickHandler:updateSlideState}),/*#__PURE__*/_jsx(Slide,{direction:isSmallScreen?'left':'up',in:!slideState.isSwitching,timeout:transSpeed,children:/*#__PURE__*/_jsx(Box,{sx:{...slideStyle,zIndex:2},children:components[slideState.currentIdx]})})]});};export default Slides;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Box","Slide","useMediaQuery","useTheme","NavBar","Header","jsx","_jsx","jsxs","_jsxs","Slides","props","components","transSpeed","slideState","setSlideState","currentIdx","previousIdx","isSwitching","containerRef","prevState","updateSlideState","newIdx","window","setTimeout","isSmallScreen","breakpoints","down","console","log","scrollTimeout","acceptScroll","deltaY","prevY","deltaX","prevX","resetScroll","current","undefined","handleScrollTimeout","length","handleScrollEvent","e","clearTimeout","type","y","targetTouches","clientY","x","clientX","slideStyle","width","height","position","containerStyle","overflowY","ref","sx","overscrollBehavior","onWheel","onTouchMove","children","orientation","currIdx","clickHandler","direction","in","timeout","zIndex"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide, useMediaQuery, useTheme } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\n\nconst Slides = (props) => {\n    const { components } = props;\n    const transSpeed = 500;\n\n    const [slideState, setSlideState] = useState({\n        currentIdx: 0,\n        previousIdx: 0,\n        isSwitching: false,\n    });\n\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        setSlideState(prevState => ({\n            ...prevState,\n            currentIdx: 0,\n            previousIdx: 0,\n        }));\n    }, [components]);\n\n    const updateSlideState = useCallback(\n        (newIdx) => {\n            setSlideState((prevState) => ({\n                ...prevState,\n                previousIdx: prevState.currentIdx,\n                isSwitching: true,\n            }));\n\n            window.setTimeout(() => {\n                setSlideState((prevState) => ({\n                    ...prevState,\n                    isSwitching: false,\n                    currentIdx: newIdx,\n                }));\n            }, transSpeed);\n        },\n        [transSpeed]\n    );\n\n    const isSmallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\n    console.log(isSmallScreen)\n\n    const scrollTimeout = useRef(null);\n    const acceptScroll = useRef(true);\n    let deltaY = 0;\n    let prevY = -1;\n    let deltaX = 0;\n    let prevX = -1;\n\n    const resetScroll = () => {\n        scrollTimeout.current = undefined;\n        acceptScroll.current = true;\n        deltaY = 0;\n        deltaX = 0;\n    };\n\n    const handleScrollTimeout = () => {\n        if ((deltaY > 50 && slideState.currentIdx < components.length - 1) || (deltaX > 50 && slideState.currentIdx < components.length - 1)) {\n            updateSlideState(slideState.currentIdx + 1);\n            console.log(deltaY)\n        } else if ((deltaY < -50 && slideState.currentIdx > 0) || (deltaX < -50 && slideState.currentIdx > 0)) {\n            updateSlideState(slideState.currentIdx - 1);\n\n            console.log(deltaY)\n        }\n\n        window.setTimeout(resetScroll, 40);\n    };\n\n    const handleScrollEvent = (e) => {\n\n        if (scrollTimeout.current) {\n            clearTimeout(scrollTimeout.current);\n        }\n        scrollTimeout.current = window.setTimeout(handleScrollTimeout, 40);\n\n        if (e.type === 'wheel') {\n            if (!isSmallScreen) {\n                deltaY += e.deltaY;\n            } else {\n                deltaX += e.deltaX;\n            }\n        } else {\n            if (!isSmallScreen) {\n                const y = e.targetTouches[0].clientY;\n                if (prevY !== -1) {\n                    deltaY += prevY - y;\n                }\n                prevY = y;\n            } else {\n                const x = e.targetTouches[0].clientX;\n                if (prevX !== -1) {\n                    deltaX += prevX - x;\n                }\n                prevX = x;\n            }\n\n        }\n\n\n    };\n\n    const slideStyle = {\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n    };\n\n    const containerStyle = {\n        overflowY: 'hidden',\n    };\n\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{ overscrollBehavior: 'none', ...containerStyle }}\n            onWheel={handleScrollEvent}\n            onTouchMove={handleScrollEvent}\n        >\n            <Header\n                orientation={isSmallScreen ? 'horizontal' : 'vertical'}\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n            <NavBar\n                orientation={isSmallScreen ? 'horizontal' : 'vertical'}\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n\n            <Slide direction={isSmallScreen ? 'left' : 'up'} in={!slideState.isSwitching} timeout={transSpeed}>\n                <Box sx={{ ...slideStyle, zIndex: 2 }}>\n                    {components[slideState.currentIdx]}\n                </Box>\n            </Slide>\n        </Box>\n    );\n};\n\nexport default Slides;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}