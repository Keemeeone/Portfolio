{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { Container, Typography, Card, CardContent, Grid, LinearProgress, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@mui/material\";\n\n// // Frontend Skills\n// const frontendSkills = [\n//     { title: \"JavaScript\", level: 90 },\n//     { title: \"React.js\", level: 85 },\n//     { title: \"HTML5\", level: 90 },\n//     { title: \"CSS3\", level: 85 },\n//     { title: \"HTML5\", level: 95 },\n//     { title: \"CSS\", level: 100 },\n//     { title: \"Figma\", level: 90 },\n// ];\n\n// // Backend Skills\n// const backendSkills = [\n//     { title: \"Java\", level: 90 },\n//     { title: \"C\", level: 75 },\n//     { title: \"Python\", level: 65 },\n//     { title: \"TypeScript\", level: 70 },\n//     { title: \"R\", level: 80 },\n//     { title: \"MySQL\", level: 85 },\n//     { title: \"React-Native\", level: 85 }, // Note: React-Native can be used for mobile (frontend) or backend\n//     { title: \"FastAPI\", level: 60 },\n//     { title: \"JSON\", level: 90 },\n//     { title: \"Node.js\", level: 90 },\n// ];\n\n// // Common Skills (Tools and Practices)\n// const commonSkills = [\n//     { title: \"Postman\", level: 80 },\n//     { title: \"Git\", level: 95 },\n//     { title: \"Linux\", level: 70 },\n// ];\n// const calculateAverageLevel = (skills) => {\n//     const totalLevels = skills.reduce((sum, skill) => sum + skill.level, 0);\n//     const averageLevel = totalLevels / skills.length;\n//     return Math.round(averageLevel * 100) / 100; // Round to two decimal places\n// };\n\n// // SkillCard Component\n// const SkillCard = ({ category, averageLevel, onClick }) => (\n//     <Grid item xs={12} sm={6} md={6} key={category}>\n//       <Card elevation={3} onClick={onClick}>\n//         <CardContent>\n//           <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n//             {category}\n//           </Typography>\n//           <LinearProgress variant=\"determinate\" value={averageLevel} />\n//           <Typography variant=\"body2\" color=\"textSecondary\">\n//             Average Level: {averageLevel}%\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     </Grid>\n//   );\n\n//   // Skill Component\n//   const Skill = () => {\n//     const [openModal, setOpenModal] = useState(false);\n//     const [selectedSkill, setSelectedSkill] = useState(null);\n\n//     const handleCardClick = (category, averageLevel) => {\n//       setSelectedSkill({ category, averageLevel });\n//       setOpenModal(true);\n//     };\n\n//     const handleCloseModal = () => {\n//       setOpenModal(false);\n//       setSelectedSkill(null);\n//     };\n\n//     return (\n//       <Container\n//         id=\"intro\"\n//         sx={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//           height: \"100%\",\n//         }}\n//       >\n//         <Typography variant=\"h2\" fontWeight={\"bold\"} align=\"center\" mb={10}>\n//           Skills\n//         </Typography>\n//         <Grid container spacing={3}>\n//           {/* Frontend Skills */}\n//           <SkillCard\n//             category=\"Frontend Skills\"\n//             averageLevel={calculateAverageLevel(frontendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Frontend Skills\", calculateAverageLevel(frontendSkills))\n//             }\n//           />\n\n//           {/* Backend Skills */}\n//           <SkillCard\n//             category=\"Backend Skills\"\n//             averageLevel={calculateAverageLevel(backendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Backend Skills\", calculateAverageLevel(backendSkills))\n//             }\n//           />\n\n//           {/* Common Skills */}\n//           <SkillCard\n//             category=\"Common Skills\"\n//             averageLevel={calculateAverageLevel(commonSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Common Skills\", calculateAverageLevel(commonSkills))\n//             }\n//           />\n//         </Grid>\n\n//         <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" mt={5} paragraph>\n//           Click cards to see details about skills\n//         </Typography>\n\n//         {/* Modal */}\n//         <Dialog open={openModal} onClose={handleCloseModal} maxWidth=\"sm\" fullWidth>\n//           <DialogTitle>{selectedSkill && selectedSkill.category}</DialogTitle>\n//           <DialogContent>\n//             {selectedSkill && (\n//               <>\n//                 <ul>\n//                   {selectedSkill.category === \"Frontend Skills\" &&\n//                     frontendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Backend Skills\" &&\n//                     backendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Common Skills\" &&\n//                     commonSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                 </ul>\n//               </>\n//             )}\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleCloseModal}>Close</Button>\n//           </DialogActions>\n//         </Dialog>\n//       </Container>\n//     );\n//   };\n\n//   export default Skill;","map":{"version":3,"names":[],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Skill.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { Container, Typography, Card, CardContent, Grid, LinearProgress, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@mui/material\";\n\n// // Frontend Skills\n// const frontendSkills = [\n//     { title: \"JavaScript\", level: 90 },\n//     { title: \"React.js\", level: 85 },\n//     { title: \"HTML5\", level: 90 },\n//     { title: \"CSS3\", level: 85 },\n//     { title: \"HTML5\", level: 95 },\n//     { title: \"CSS\", level: 100 },\n//     { title: \"Figma\", level: 90 },\n// ];\n\n// // Backend Skills\n// const backendSkills = [\n//     { title: \"Java\", level: 90 },\n//     { title: \"C\", level: 75 },\n//     { title: \"Python\", level: 65 },\n//     { title: \"TypeScript\", level: 70 },\n//     { title: \"R\", level: 80 },\n//     { title: \"MySQL\", level: 85 },\n//     { title: \"React-Native\", level: 85 }, // Note: React-Native can be used for mobile (frontend) or backend\n//     { title: \"FastAPI\", level: 60 },\n//     { title: \"JSON\", level: 90 },\n//     { title: \"Node.js\", level: 90 },\n// ];\n\n// // Common Skills (Tools and Practices)\n// const commonSkills = [\n//     { title: \"Postman\", level: 80 },\n//     { title: \"Git\", level: 95 },\n//     { title: \"Linux\", level: 70 },\n// ];\n// const calculateAverageLevel = (skills) => {\n//     const totalLevels = skills.reduce((sum, skill) => sum + skill.level, 0);\n//     const averageLevel = totalLevels / skills.length;\n//     return Math.round(averageLevel * 100) / 100; // Round to two decimal places\n// };\n\n// // SkillCard Component\n// const SkillCard = ({ category, averageLevel, onClick }) => (\n//     <Grid item xs={12} sm={6} md={6} key={category}>\n//       <Card elevation={3} onClick={onClick}>\n//         <CardContent>\n//           <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n//             {category}\n//           </Typography>\n//           <LinearProgress variant=\"determinate\" value={averageLevel} />\n//           <Typography variant=\"body2\" color=\"textSecondary\">\n//             Average Level: {averageLevel}%\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     </Grid>\n//   );\n  \n//   // Skill Component\n//   const Skill = () => {\n//     const [openModal, setOpenModal] = useState(false);\n//     const [selectedSkill, setSelectedSkill] = useState(null);\n  \n//     const handleCardClick = (category, averageLevel) => {\n//       setSelectedSkill({ category, averageLevel });\n//       setOpenModal(true);\n//     };\n  \n//     const handleCloseModal = () => {\n//       setOpenModal(false);\n//       setSelectedSkill(null);\n//     };\n  \n//     return (\n//       <Container\n//         id=\"intro\"\n//         sx={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//           height: \"100%\",\n//         }}\n//       >\n//         <Typography variant=\"h2\" fontWeight={\"bold\"} align=\"center\" mb={10}>\n//           Skills\n//         </Typography>\n//         <Grid container spacing={3}>\n//           {/* Frontend Skills */}\n//           <SkillCard\n//             category=\"Frontend Skills\"\n//             averageLevel={calculateAverageLevel(frontendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Frontend Skills\", calculateAverageLevel(frontendSkills))\n//             }\n//           />\n  \n//           {/* Backend Skills */}\n//           <SkillCard\n//             category=\"Backend Skills\"\n//             averageLevel={calculateAverageLevel(backendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Backend Skills\", calculateAverageLevel(backendSkills))\n//             }\n//           />\n  \n//           {/* Common Skills */}\n//           <SkillCard\n//             category=\"Common Skills\"\n//             averageLevel={calculateAverageLevel(commonSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Common Skills\", calculateAverageLevel(commonSkills))\n//             }\n//           />\n//         </Grid>\n  \n//         <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" mt={5} paragraph>\n//           Click cards to see details about skills\n//         </Typography>\n  \n//         {/* Modal */}\n//         <Dialog open={openModal} onClose={handleCloseModal} maxWidth=\"sm\" fullWidth>\n//           <DialogTitle>{selectedSkill && selectedSkill.category}</DialogTitle>\n//           <DialogContent>\n//             {selectedSkill && (\n//               <>\n//                 <ul>\n//                   {selectedSkill.category === \"Frontend Skills\" &&\n//                     frontendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Backend Skills\" &&\n//                     backendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Common Skills\" &&\n//                     commonSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                 </ul>\n//               </>\n//             )}\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleCloseModal}>Close</Button>\n//           </DialogActions>\n//         </Dialog>\n//       </Container>\n//     );\n//   };\n  \n//   export default Skill;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}