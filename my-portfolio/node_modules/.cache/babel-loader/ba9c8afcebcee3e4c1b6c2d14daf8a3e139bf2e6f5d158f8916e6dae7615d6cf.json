{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Element, animateScroll as scroll } from \"react-scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  children\n}) => {\n  _s();\n  const [visibleIndex, setVisibleIndex] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      // 스크롤 위치 계산\n      const scrollPosition = window.scrollY;\n\n      // 여기에서 원하는 로직에 따라 다음에 보여줄 컴포넌트의 인덱스를 계산\n      // 예를 들어, 스크롤 위치가 특정 값 이상이면 인덱스를 증가시키거나 다음 데이터를 불러오는 등의 로직을 추가할 수 있습니다.\n\n      // 여기에서는 간단하게 스크롤 위치에 따라 인덱스를 업데이트하는 예제를 보여줍니다.\n      const newIndex = Math.floor(scrollPosition / window.innerHeight);\n      setVisibleIndex(newIndex);\n    };\n\n    // 스크롤 이벤트 리스너 등록\n    window.addEventListener('scroll', handleScroll);\n\n    // 컴포넌트가 언마운트될 때 리스너 제거\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    role: \"main\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\",\n      overflowY: \"scroll\" // Enable vertical scrolling if needed\n    },\n    children: React.Children.map(children, (child, index) => /*#__PURE__*/_jsxDEV(Element, {\n      name: `section${index}`,\n      className: \"element\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: \"1\",\n          minHeight: \"100vh\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          opacity: index === visibleIndex ? 1 : 0.5,\n          // 현재 보이는 컴포넌트의 투명도를 조절\n          transition: \"opacity 0.5s ease-in-out\" // 트랜지션 추가\n        },\n        children: child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"bSROQM+FUwkG892M1P/6ERhVZ2s=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Element","animateScroll","scroll","jsxDEV","_jsxDEV","Main","children","_s","visibleIndex","setVisibleIndex","handleScroll","scrollPosition","window","scrollY","newIndex","Math","floor","innerHeight","addEventListener","removeEventListener","id","role","style","display","flexDirection","height","overflowY","Children","map","child","index","name","className","flex","minHeight","opacity","transition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Element, animateScroll as scroll } from \"react-scroll\";\n\nconst Main = ({ children }) => {\n  const [visibleIndex, setVisibleIndex] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      // 스크롤 위치 계산\n      const scrollPosition = window.scrollY;\n      \n      // 여기에서 원하는 로직에 따라 다음에 보여줄 컴포넌트의 인덱스를 계산\n      // 예를 들어, 스크롤 위치가 특정 값 이상이면 인덱스를 증가시키거나 다음 데이터를 불러오는 등의 로직을 추가할 수 있습니다.\n\n      // 여기에서는 간단하게 스크롤 위치에 따라 인덱스를 업데이트하는 예제를 보여줍니다.\n      const newIndex = Math.floor(scrollPosition / window.innerHeight);\n      setVisibleIndex(newIndex);\n    };\n\n    // 스크롤 이벤트 리스너 등록\n    window.addEventListener('scroll', handleScroll);\n\n    // 컴포넌트가 언마운트될 때 리스너 제거\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <main\n      id=\"main\"\n      role=\"main\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100vh\",\n        overflowY: \"scroll\", // Enable vertical scrolling if needed\n      }}\n    >\n      {React.Children.map(children, (child, index) => (\n        <Element key={index} name={`section${index}`} className=\"element\">\n          <div\n            style={{\n              flex: \"1\",\n              minHeight: \"100vh\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              opacity: index === visibleIndex ? 1 : 0.5, // 현재 보이는 컴포넌트의 투명도를 조절\n              transition: \"opacity 0.5s ease-in-out\", // 트랜지션 추가\n            }}\n          >\n            {child}\n          </div>\n        </Element>\n      ))}\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,aAAa,IAAIC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAGA,CAAA,KAAM;MACzB;MACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,OAAO;;MAErC;MACA;;MAEA;MACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,GAAGC,MAAM,CAACK,WAAW,CAAC;MAChER,eAAe,CAACK,QAAQ,CAAC;IAC3B,CAAC;;IAED;IACAF,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAER,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXE,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAET,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IACEgB,EAAE,EAAC,MAAM;IACTC,IAAI,EAAC,MAAM;IACXC,KAAK,EAAE;MACLC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE,QAAQ,CAAE;IACvB,CAAE;IAAApB,QAAA,EAEDT,KAAK,CAAC8B,QAAQ,CAACC,GAAG,CAACtB,QAAQ,EAAE,CAACuB,KAAK,EAAEC,KAAK,kBACzC1B,OAAA,CAACJ,OAAO;MAAa+B,IAAI,EAAG,UAASD,KAAM,EAAE;MAACE,SAAS,EAAC,SAAS;MAAA1B,QAAA,eAC/DF,OAAA;QACEkB,KAAK,EAAE;UACLW,IAAI,EAAE,GAAG;UACTC,SAAS,EAAE,OAAO;UAClBX,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE,QAAQ;UACvBW,OAAO,EAAEL,KAAK,KAAKtB,YAAY,GAAG,CAAC,GAAG,GAAG;UAAE;UAC3C4B,UAAU,EAAE,0BAA0B,CAAE;QAC1C,CAAE;QAAA9B,QAAA,EAEDuB;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAZMV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaV,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACjC,EAAA,CAtDIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAwDV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}