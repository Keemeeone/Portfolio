{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slides = props => {\n  _s();\n  const {\n    components\n  } = props;\n  const transSpeed = 500;\n  const [slideState, setSlideState] = useState({\n    currentIdx: 0,\n    previousIdx: 0,\n    isSwitching: false\n  });\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setSlideState(prevState => ({\n      ...prevState,\n      currentIdx: 0,\n      previousIdx: 0\n    }));\n  }, [components]);\n  const updateSlideState = useCallback(newIdx => {\n    setSlideState(prevState => ({\n      ...prevState,\n      previousIdx: prevState.currentIdx,\n      isSwitching: true\n    }));\n    setTimeout(() => {\n      setSlideState(prevState => ({\n        ...prevState,\n        isSwitching: false,\n        currentIdx: newIdx\n      }));\n    }, transSpeed);\n  }, [transSpeed]);\n  const handleScrollTimeout = () => {\n    if (Math.abs(deltaY.current) > 50) {\n      const direction = deltaY.current > 0 ? 1 : -1;\n      const newIndex = Math.min(components.length - 1, Math.max(0, slideState.currentIdx + direction));\n      updateSlideState(newIndex);\n    }\n    resetScroll();\n  };\n  const handleScrollEvent = e => {\n    if (acceptScroll.current) {\n      if (scrollTimeout.current) {\n        clearTimeout(scrollTimeout.current);\n      }\n      scrollTimeout.current = setTimeout(handleScrollTimeout, 40);\n      if (e.type === 'wheel') {\n        deltaY.current += e.deltaY;\n      } else {\n        var _e$targetTouches$;\n        deltaY.current += e.targetTouches[0].clientY - (((_e$targetTouches$ = e.targetTouches[1]) === null || _e$targetTouches$ === void 0 ? void 0 : _e$targetTouches$.clientY) || 0);\n      }\n    }\n  };\n  const resetScroll = () => {\n    clearTimeout(scrollTimeout.current);\n    acceptScroll.current = true;\n    deltaY.current = 0;\n  };\n  const slideStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'fixed'\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: containerRef,\n    sx: {\n      overscrollBehavior: 'none'\n    },\n    onWheel: handleScrollEvent,\n    onTouchMove: handleScrollEvent,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: \"vertical\",\n      length: components.length,\n      currIdx: slideState.currentIdx,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      orientation: \"vertical\",\n      length: components.length,\n      currIdx: slideState.currentIdx,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: \"up\",\n      in: !slideState.isSwitching,\n      timeout: transSpeed,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ...slideStyle,\n          zIndex: 2\n        },\n        children: components[slideState.currentIdx]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Slides, \"Y42jBQ4vCoUva708EtxBQUtDrow=\");\n_c = Slides;\nexport default Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Box","Slide","NavBar","Header","jsxDEV","_jsxDEV","Slides","props","_s","components","transSpeed","slideState","setSlideState","currentIdx","previousIdx","isSwitching","containerRef","prevState","updateSlideState","newIdx","setTimeout","handleScrollTimeout","Math","abs","deltaY","current","direction","newIndex","min","length","max","resetScroll","handleScrollEvent","e","acceptScroll","scrollTimeout","clearTimeout","type","_e$targetTouches$","targetTouches","clientY","slideStyle","width","height","position","ref","sx","overscrollBehavior","onWheel","onTouchMove","children","orientation","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","in","timeout","zIndex","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\n\nconst Slides = (props) => {\n    const { components } = props;\n    const transSpeed = 500;\n\n    const [slideState, setSlideState] = useState({\n        currentIdx: 0,\n        previousIdx: 0,\n        isSwitching: false,\n    });\n\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        setSlideState((prevState) => ({\n            ...prevState,\n            currentIdx: 0,\n            previousIdx: 0,\n        }));\n    }, [components]);\n\n    const updateSlideState = useCallback(\n        (newIdx) => {\n            setSlideState((prevState) => ({\n                ...prevState,\n                previousIdx: prevState.currentIdx,\n                isSwitching: true,\n            }));\n\n            setTimeout(() => {\n                setSlideState((prevState) => ({\n                    ...prevState,\n                    isSwitching: false,\n                    currentIdx: newIdx,\n                }));\n            }, transSpeed);\n        },\n        [transSpeed]\n    );\n\n    const handleScrollTimeout = () => {\n        if (Math.abs(deltaY.current) > 50) {\n            const direction = deltaY.current > 0 ? 1 : -1;\n            const newIndex = Math.min(\n                components.length - 1,\n                Math.max(0, slideState.currentIdx + direction)\n            );\n            updateSlideState(newIndex);\n        }\n\n        resetScroll();\n    };\n\n    const handleScrollEvent = (e) => {\n        if (acceptScroll.current) {\n            if (scrollTimeout.current) {\n                clearTimeout(scrollTimeout.current);\n            }\n            scrollTimeout.current = setTimeout(handleScrollTimeout, 40);\n\n            if (e.type === 'wheel') {\n                deltaY.current += e.deltaY;\n            } else {\n                deltaY.current += e.targetTouches[0].clientY - (e.targetTouches[1]?.clientY || 0);\n            }\n        }\n    };\n\n    const resetScroll = () => {\n        clearTimeout(scrollTimeout.current);\n        acceptScroll.current = true;\n        deltaY.current = 0;\n    };\n\n    const slideStyle = {\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n    };\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{ overscrollBehavior: 'none' }}\n            onWheel={handleScrollEvent}\n            onTouchMove={handleScrollEvent}\n        >\n            <Header\n                orientation=\"vertical\"\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n            <NavBar\n                orientation=\"vertical\"\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n\n            <Slide direction=\"up\" in={!slideState.isSwitching} timeout={transSpeed}>\n                <Box sx={{ ...slideStyle, zIndex: 2 }}>\n                    {components[slideState.currentIdx]}\n                </Box>\n            </Slide>\n        </Box>\n    );\n};\n\nexport default Slides;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}