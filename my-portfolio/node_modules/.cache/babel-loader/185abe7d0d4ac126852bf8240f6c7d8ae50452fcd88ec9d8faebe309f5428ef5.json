{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  children\n}) => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    await loadSlim(engine);\n  }, []);\n  const particlesLoaded = useCallback(async container => {\n    await console.log(container);\n  }, []);\n  useEffect(() => {\n    let particlesRef = null;\n    const initializeParticles = async () => {\n      // 파티클 초기화\n      if (particlesRef) {\n        await particlesRef.destroy();\n      }\n      particlesRef = new Particles();\n      particlesRef.init();\n      particlesRef.load(\"tsparticles\", {\n        background: {\n          color: {\n            value: \"#327C57\"\n          }\n        },\n        fpsLimit: 120,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"push\"\n            },\n            onHover: {\n              enable: true,\n              mode: \"repulse\"\n            },\n            resize: true\n          },\n          modes: {\n            push: {\n              quantity: 4\n            },\n            repulse: {\n              distance: 200,\n              duration: 0.4\n            }\n          }\n        },\n        particles: {\n          color: {\n            value: \"#ffffff\"\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\"\n            },\n            random: false,\n            speed: 2,\n            straight: false\n          },\n          number: {\n            density: {\n              enable: true,\n              area: 2000\n            },\n            value: 80\n          },\n          opacity: {\n            value: 0.2\n          },\n          shape: {\n            type: \"circle\"\n          },\n          size: {\n            value: {\n              min: 1,\n              max: 5\n            }\n          }\n        },\n        detectRetina: true\n        // ... 여러 다른 설정들 ...\n      });\n    };\n\n    // 컴포넌트 마운트 시 파티클 초기화\n    initializeParticles();\n\n    // 컴포넌트가 언마운트될 때 파티클 시스템 제거\n    return () => {\n      if (particlesRef) {\n        particlesRef.destroy();\n      }\n    };\n  }, [particlesInit, particlesLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    id: \"main\",\n    role: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"tsparticles\",\n      init: particlesInit,\n      loaded: particlesLoaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"Jf1jpKmzflxPXCcd4CVUAms78tY=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useCallback","Particles","loadSlim","jsxDEV","_jsxDEV","Main","children","_s","particlesInit","engine","particlesLoaded","container","console","log","particlesRef","initializeParticles","destroy","init","load","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","move","direction","outModes","default","random","speed","straight","number","density","area","opacity","shape","type","size","min","max","detectRetina","id","role","loaded","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Main.jsx"],"sourcesContent":["import React, { useEffect, useCallback } from \"react\";\nimport Particles from \"react-particles\";\nimport { loadSlim } from \"tsparticles-slim\";\n\nconst Main = ({ children }) => {\n    const particlesInit = useCallback(async (engine) => {\n        await loadSlim(engine);\n    }, []);\n\n    const particlesLoaded = useCallback(async (container) => {\n        await console.log(container);\n    }, []);\n\n    useEffect(() => {\n        let particlesRef = null;\n\n        const initializeParticles = async () => {\n            // 파티클 초기화\n            if (particlesRef) {\n                await particlesRef.destroy();\n            }\n            particlesRef = new Particles();\n            particlesRef.init();\n            particlesRef.load(\"tsparticles\", {\n                background: {\n                    color: {\n                        value: \"#327C57\",\n                    },\n                },\n                fpsLimit: 120,\n                interactivity: {\n                    events: {\n                        onClick: {\n                            enable: true,\n                            mode: \"push\",\n                        },\n                        onHover: {\n                            enable: true,\n                            mode: \"repulse\",\n                        },\n                        resize: true,\n                    },\n                    modes: {\n                        push: {\n                            quantity: 4,\n                        },\n                        repulse: {\n                            distance: 200,\n                            duration: 0.4,\n                        },\n                    },\n                },\n                particles: {\n                    color: {\n                        value: \"#ffffff\",\n                    },\n                    move: {\n                        direction: \"none\",\n                        enable: true,\n                        outModes: {\n                            default: \"bounce\",\n                        },\n                        random: false,\n                        speed: 2,\n                        straight: false,\n                    },\n                    number: {\n                        density: {\n                            enable: true,\n                            area: 2000,\n                        },\n                        value: 80,\n                    },\n                    opacity: {\n                        value: 0.2,\n                    },\n                    shape: {\n                        type: \"circle\",\n                    },\n                    size: {\n                        value: { min: 1, max: 5 },\n                    },\n                },\n                detectRetina: true,\n                // ... 여러 다른 설정들 ...\n            });\n        };\n\n        // 컴포넌트 마운트 시 파티클 초기화\n        initializeParticles();\n\n        // 컴포넌트가 언마운트될 때 파티클 시스템 제거\n        return () => {\n            if (particlesRef) {\n                particlesRef.destroy();\n            }\n        };\n    }, [particlesInit, particlesLoaded]);\n\n    return (\n        <main id=\"main\" role=\"main\">\n            <Particles\n                id=\"tsparticles\"\n                init={particlesInit}\n                loaded={particlesLoaded}\n            />\n            {children}\n        </main>\n    );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}