{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\n// React\nimport React, { useState, useEffect, useCallback } from 'react';\n// Material UI\nimport { Box } from '@mui/material';\n// Components\nimport NavBar from './Slides/NavBar';\n\n/**\n * React Functional Component for full-page scroll wrapper\n * @param {ISlideProps} props Properties that passed from the parent Component\n * @return {React.ReactElement} Renders full-page scroll wrapper\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Slides(props) {\n  _s();\n  const {\n    components\n  } = props;\n  const transitionSpeed = 150;\n\n  // States\n  const [idxState, setIdxState] = useState({\n    currVIdx: 0,\n    pastVIdx: 0,\n    currHIdx: [],\n    pastHIdx: [],\n    isSwitching: false\n  });\n\n  // variable that is not a state (cleared after every re-render)\n  // For scroll detection\n  let scrollTimeout;\n  let acceptScroll = true;\n  let deltaY = 0;\n  let deltaX = 0;\n  // Specific to touch screen\n  let prevX = -1;\n  let prevY = -1;\n\n  // function to detect whether the child slide is horizontal scrollable or not\n  const isHorizontal = useCallback(slide => {\n    return (slide === null || slide === void 0 ? void 0 : slide.length) !== undefined ? true : false;\n  }, []);\n  useEffect(() => {\n    idxState.currHIdx = components.map(slide => isHorizontal(slide) ? 0 : -1);\n    idxState.pastHIdx = components.map(slide => isHorizontal(slide) ? 0 : -1);\n    setIdxState({\n      ...idxState\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // function to modify index\n  const vIdxSetter = useCallback(newIdx => {\n    idxState.pastHIdx = [...idxState.currHIdx];\n    idxState.pastVIdx = idxState.currVIdx;\n    idxState.isSwitching = true;\n    setIdxState({\n      ...idxState\n    });\n    window.setTimeout(() => {\n      idxState.isSwitching = false;\n      idxState.currVIdx = newIdx;\n      setIdxState({\n        ...idxState\n      });\n    }, transitionSpeed);\n  }, [idxState]);\n  const hIdxSetter = useCallback(newIdx => {\n    idxState.pastVIdx = idxState.currVIdx;\n    idxState.pastHIdx = [...idxState.pastHIdx];\n    idxState.pastHIdx[idxState.currVIdx] = idxState.currHIdx[idxState.currVIdx];\n    idxState.isSwitching = true;\n    setIdxState({\n      ...idxState\n    });\n    window.setTimeout(() => {\n      idxState.isSwitching = false;\n      idxState.currHIdx = [...idxState.currHIdx];\n      idxState.currHIdx[idxState.currVIdx] = newIdx;\n      setIdxState({\n        ...idxState\n      });\n    }, transitionSpeed);\n  }, [idxState]);\n\n  // Event Handler for scroll detection\n  const scrollReset = () => {\n    scrollTimeout = undefined;\n    acceptScroll = true;\n    deltaY = 0;\n    deltaX = 0;\n    prevY = -1;\n    prevX = -1;\n  };\n  const scrollTimeoutEvent = () => {\n    if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n      // Vertical scroll detected\n      if (deltaY > 50 && idxState.currVIdx < components.length - 1) {\n        vIdxSetter(idxState.currVIdx + 1);\n      } else if (deltaY < -50 && idxState.currVIdx > 0) {\n        vIdxSetter(idxState.currVIdx - 1);\n      }\n    } else {\n      // Horizontal scroll detected\n      if (idxState.currHIdx[idxState.currVIdx] !== -1) {\n        if (deltaX > 50 && idxState.currHIdx[idxState.currVIdx] < (components[idxState.currVIdx] || []).length - 1) {\n          hIdxSetter(idxState.currHIdx[idxState.currVIdx] + 1);\n        } else if (deltaX < -50 && idxState.currHIdx[idxState.currVIdx] > 0) {\n          hIdxSetter(idxState.currHIdx[idxState.currVIdx] - 1);\n        }\n      }\n    }\n    window.setTimeout(scrollReset, 100);\n  };\n  const scrollEventHandler = e => {\n    if (acceptScroll) {\n      // Setup timer to detect the end of wheel activity\n      if (scrollTimeout) {\n        clearTimeout(scrollTimeout);\n      }\n      scrollTimeout = window.setTimeout(scrollTimeoutEvent, 100);\n\n      // Calculate delta\n      if (e.type === 'wheel') {\n        deltaY += e.deltaY;\n        deltaX += e.deltaX;\n      } else {\n        const y = e.targetTouches[0].clientY;\n        const x = e.targetTouches[0].clientX;\n\n        // Not the first touch event - calculate delta\n        if (prevY !== -1 || prevX !== -1) {\n          deltaY += prevY - y;\n          deltaX += prevX - x;\n        }\n\n        // Store the current client coordinate as the previous coordinate\n        prevY = y;\n        prevX = x;\n      }\n    }\n  };\n  const slideStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'fixed'\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      overscrollBehavior: 'none'\n    },\n    onWheel: scrollEventHandler,\n    onTouchMove: scrollEventHandler,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      orientation: \"vertical\",\n      length: components.length,\n      currIdx: idxState.currVIdx,\n      clickHandler: vIdxSetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), isHorizontal(components[idxState.currVIdx]) ? /*#__PURE__*/_jsxDEV(NavBar, {\n      orientation: \"horizontal\",\n      length: (components[idxState.currVIdx] || []).length,\n      currIdx: idxState.currHIdx[idxState.currVIdx],\n      clickHandler: hIdxSetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : undefined, /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ...slideStyle,\n        zIndex: 3,\n        transition: `all ${transitionSpeed}ms linear 0ms`,\n        opacity: idxState.isSwitching ? 1 : 0\n      },\n      visibility: idxState.isSwitching ? undefined : 'hidden',\n      children: isHorizontal(components[idxState.pastVIdx]) ? (components[idxState.pastVIdx] || [])[idxState.pastHIdx[idxState.pastVIdx]] : components[idxState.pastVIdx]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        ...slideStyle,\n        zIndex: 2\n      },\n      children: isHorizontal(components[idxState.currVIdx]) ? (components[idxState.currVIdx] || [])[idxState.currHIdx[idxState.currVIdx]] : components[idxState.currVIdx]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(Slides, \"vhlJnghp7a8kQf4pG62cH1LrLEA=\");\n_c = Slides;\nexport default Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Box","NavBar","jsxDEV","_jsxDEV","Slides","props","_s","components","transitionSpeed","idxState","setIdxState","currVIdx","pastVIdx","currHIdx","pastHIdx","isSwitching","scrollTimeout","acceptScroll","deltaY","deltaX","prevX","prevY","isHorizontal","slide","length","undefined","map","vIdxSetter","newIdx","window","setTimeout","hIdxSetter","scrollReset","scrollTimeoutEvent","Math","abs","scrollEventHandler","e","clearTimeout","type","y","targetTouches","clientY","x","clientX","slideStyle","width","height","position","sx","overscrollBehavior","onWheel","onTouchMove","children","orientation","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","zIndex","transition","opacity","visibility","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["// React\nimport React, { useState, useEffect, useCallback } from 'react';\n// Material UI\nimport { Box } from '@mui/material';\n// Components\nimport NavBar from './Slides/NavBar';\n\n\n/**\n * React Functional Component for full-page scroll wrapper\n * @param {ISlideProps} props Properties that passed from the parent Component\n * @return {React.ReactElement} Renders full-page scroll wrapper\n */\nfunction Slides(props) {\n  const { components } = props;\n  const transitionSpeed = 150;\n\n  // States\n  const [idxState, setIdxState] = useState({\n    currVIdx: 0,\n    pastVIdx: 0,\n    currHIdx: [],\n    pastHIdx: [],\n    isSwitching: false,\n  });\n\n  // variable that is not a state (cleared after every re-render)\n  // For scroll detection\n  let scrollTimeout;\n  let acceptScroll = true;\n  let deltaY = 0;\n  let deltaX = 0;\n  // Specific to touch screen\n  let prevX = -1;\n  let prevY = -1;\n\n  // function to detect whether the child slide is horizontal scrollable or not\n  const isHorizontal = useCallback(\n    (slide) => {\n      return slide?.length !== undefined ? true : false;\n    },\n    [],\n  );\n\n  useEffect(() => {\n    idxState.currHIdx = components.map((slide) =>\n      isHorizontal(slide) ? 0 : -1\n    );\n    idxState.pastHIdx = components.map((slide) =>\n      isHorizontal(slide) ? 0 : -1\n    );\n    setIdxState({ ...idxState });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // function to modify index\n  const vIdxSetter = useCallback(\n    (newIdx) => {\n      idxState.pastHIdx = [...idxState.currHIdx];\n      idxState.pastVIdx = idxState.currVIdx;\n      idxState.isSwitching = true;\n      setIdxState({ ...idxState });\n\n      window.setTimeout(() => {\n        idxState.isSwitching = false;\n        idxState.currVIdx = newIdx;\n        setIdxState({ ...idxState });\n      }, transitionSpeed);\n    },\n    [idxState],\n  );\n  const hIdxSetter = useCallback(\n    (newIdx) => {\n      idxState.pastVIdx = idxState.currVIdx;\n      idxState.pastHIdx = [...idxState.pastHIdx];\n      idxState.pastHIdx[idxState.currVIdx] =\n        idxState.currHIdx[idxState.currVIdx];\n      idxState.isSwitching = true;\n      setIdxState({ ...idxState });\n\n      window.setTimeout(() => {\n        idxState.isSwitching = false;\n        idxState.currHIdx = [...idxState.currHIdx];\n        idxState.currHIdx[idxState.currVIdx] = newIdx;\n        setIdxState({ ...idxState });\n      }, transitionSpeed);\n    },\n    [idxState],\n  );\n\n  // Event Handler for scroll detection\n  const scrollReset = () => {\n    scrollTimeout = undefined;\n    acceptScroll = true;\n    deltaY = 0;\n    deltaX = 0;\n    prevY = -1;\n    prevX = -1;\n  };\n  const scrollTimeoutEvent = () => {\n    if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n      // Vertical scroll detected\n      if (deltaY > 50 && idxState.currVIdx < components.length - 1) {\n        vIdxSetter(idxState.currVIdx + 1);\n      } else if (deltaY < -50 && idxState.currVIdx > 0) {\n        vIdxSetter(idxState.currVIdx - 1);\n      }\n    } else {\n      // Horizontal scroll detected\n      if (idxState.currHIdx[idxState.currVIdx] !== -1) {\n        if (\n          deltaX > 50 &&\n          idxState.currHIdx[idxState.currVIdx] <\n            (components[idxState.currVIdx] || []).length - 1\n        ) {\n          hIdxSetter(idxState.currHIdx[idxState.currVIdx] + 1);\n        } else if (\n          deltaX < -50 &&\n          idxState.currHIdx[idxState.currVIdx] > 0\n        ) {\n          hIdxSetter(idxState.currHIdx[idxState.currVIdx] - 1);\n        }\n      }\n    }\n\n    window.setTimeout(scrollReset, 100);\n  };\n  const scrollEventHandler = (e) => {\n    if (acceptScroll) {\n      // Setup timer to detect the end of wheel activity\n      if (scrollTimeout) {\n        clearTimeout(scrollTimeout);\n      }\n      scrollTimeout = window.setTimeout(scrollTimeoutEvent, 100);\n  \n      // Calculate delta\n      if (e.type === 'wheel') {\n        deltaY += e.deltaY;\n        deltaX += e.deltaX;\n      } else {\n        const y = e.targetTouches[0].clientY;\n        const x = e.targetTouches[0].clientX;\n  \n        // Not the first touch event - calculate delta\n        if (prevY !== -1 || prevX !== -1) {\n          deltaY += prevY - y;\n          deltaX += prevX - x;\n        }\n  \n        // Store the current client coordinate as the previous coordinate\n        prevY = y;\n        prevX = x;\n      }\n    }\n  };\n  \n\n  const slideStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'fixed',\n  };\n\n  return (\n    <Box\n      sx={{ overscrollBehavior: 'none' }}\n      onWheel={scrollEventHandler}\n      onTouchMove={scrollEventHandler}\n    >\n      <NavBar\n        orientation=\"vertical\"\n        length={components.length}\n        currIdx={idxState.currVIdx}\n        clickHandler={vIdxSetter}\n      />\n      {isHorizontal(components[idxState.currVIdx]) ? (\n        <NavBar\n          orientation=\"horizontal\"\n          length={(components[idxState.currVIdx] || []).length}\n          currIdx={idxState.currHIdx[idxState.currVIdx]}\n          clickHandler={hIdxSetter}\n        />\n      ) : undefined}\n      <Box\n        sx={{\n          ...slideStyle,\n          zIndex: 3,\n          transition: `all ${transitionSpeed}ms linear 0ms`,\n          opacity: idxState.isSwitching ? 1 : 0,\n        }}\n        visibility={idxState.isSwitching ? undefined : 'hidden'}\n      >\n        {isHorizontal(components[idxState.pastVIdx])\n          ? (components[idxState.pastVIdx] || [])[\n              idxState.pastHIdx[idxState.pastVIdx]\n            ]\n          : components[idxState.pastVIdx]}\n      </Box>\n      <Box sx={{ ...slideStyle, zIndex: 2 }}>\n        {isHorizontal(components[idxState.currVIdx])\n          ? (components[idxState.currVIdx] || [])[\n              idxState.currHIdx[idxState.currVIdx]\n            ]\n          : components[idxState.currVIdx]}\n      </Box>\n    </Box>\n  );\n}\n\nexport default Slides;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}