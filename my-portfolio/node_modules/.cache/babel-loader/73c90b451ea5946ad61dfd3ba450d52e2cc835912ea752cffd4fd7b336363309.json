{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slides = ({\n  components\n}) => {\n  _s();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const handleScroll = direction => {\n    if (direction === \"next\" && currentSlide < components.length - 1) {\n      setCurrentSlide(currentSlide + 1);\n    } else if (direction === \"prev\" && currentSlide > 0) {\n      setCurrentSlide(currentSlide - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      overflow: \"hidden\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        transition: \"transform 0.5s ease-in-out\",\n        transform: `translateX(-${currentSlide * 100}%)`\n      },\n      children: components.map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: \"0 0 100%\",\n          boxSizing: \"border-box\"\n        },\n        children: component\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScroll(\"prev\"),\n      style: buttonStyle,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScroll(\"next\"),\n      style: buttonStyle,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Slides, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n_c = Slides;\nconst buttonStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  transform: \"translateY(-50%)\",\n  padding: \"10px\",\n  backgroundColor: \"#333\",\n  color: \"#fff\",\n  border: \"none\",\n  cursor: \"pointer\"\n};\nexport default Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Slides","components","_s","currentSlide","setCurrentSlide","handleScroll","direction","length","style","position","overflow","width","children","display","transition","transform","map","component","index","flex","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonStyle","_c","top","padding","backgroundColor","color","border","cursor","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Slides = ({ components }) => {\n    const [currentSlide, setCurrentSlide] = useState(0);\n\n    const handleScroll = (direction) => {\n        if (direction === \"next\" && currentSlide < components.length - 1) {\n            setCurrentSlide(currentSlide + 1);\n        } else if (direction === \"prev\" && currentSlide > 0) {\n            setCurrentSlide(currentSlide - 1);\n        }\n    };\n\n    return (\n        <div style={{ position: \"relative\", overflow: \"hidden\", width: \"100%\" }}>\n            <div style={{ display: \"flex\", transition: \"transform 0.5s ease-in-out\", transform: `translateX(-${currentSlide * 100}%)` }}>\n                {components.map((component, index) => (\n                    <div key={index} style={{ flex: \"0 0 100%\", boxSizing: \"border-box\" }}>\n                        {component}\n                    </div>\n                ))}\n            </div>\n            <button onClick={() => handleScroll(\"prev\")} style={buttonStyle}>Previous</button>\n            <button onClick={() => handleScroll(\"next\")} style={buttonStyle}>Next</button>\n        </div>\n    );\n};\n\nconst buttonStyle = {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    padding: \"10px\",\n    backgroundColor: \"#333\",\n    color: \"#fff\",\n    border: \"none\",\n    cursor: \"pointer\",\n};\n\nexport default Slides;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEnD,MAAMQ,YAAY,GAAIC,SAAS,IAAK;IAChC,IAAIA,SAAS,KAAK,MAAM,IAAIH,YAAY,GAAGF,UAAU,CAACM,MAAM,GAAG,CAAC,EAAE;MAC9DH,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACrC,CAAC,MAAM,IAAIG,SAAS,KAAK,MAAM,IAAIH,YAAY,GAAG,CAAC,EAAE;MACjDC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;IACrC;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAKS,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACpEb,OAAA;MAAKS,KAAK,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,4BAA4B;QAAEC,SAAS,EAAG,eAAcZ,YAAY,GAAG,GAAI;MAAI,CAAE;MAAAS,QAAA,EACvHX,UAAU,CAACe,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC7BnB,OAAA;QAAiBS,KAAK,EAAE;UAAEW,IAAI,EAAE,UAAU;UAAEC,SAAS,EAAE;QAAa,CAAE;QAAAR,QAAA,EACjEK;MAAS,GADJC,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAAC,MAAM,CAAE;MAACG,KAAK,EAAEkB,WAAY;MAAAd,QAAA,EAAC;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClFzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMpB,YAAY,CAAC,MAAM,CAAE;MAACG,KAAK,EAAEkB,WAAY;MAAAd,QAAA,EAAC;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEd,CAAC;AAACtB,EAAA,CAxBIF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA0BZ,MAAM0B,WAAW,GAAG;EAChBjB,QAAQ,EAAE,UAAU;EACpBmB,GAAG,EAAE,KAAK;EACVb,SAAS,EAAE,kBAAkB;EAC7Bc,OAAO,EAAE,MAAM;EACfC,eAAe,EAAE,MAAM;EACvBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE,MAAM;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,eAAejC,MAAM;AAAC,IAAA2B,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}