{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Break/PreSkill.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { motion, useSpring, useTransform, useMotionValue, useVelocity, useAnimationFrame, useScroll } from \"framer-motion\";\nimport { wrap } from \"@motionone/utils\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParallaxText({\n  children,\n  baseVelocity = 100\n}) {\n  _s();\n  const baseX = useMotionValue(0);\n  const {\n    scrollY\n  } = useScroll();\n  const scrollVelocity = useVelocity(scrollY);\n  const smoothVelocity = useSpring(scrollVelocity, {\n    damping: 40,\n    stiffness: 400\n  });\n  const velocityFactor = useTransform(smoothVelocity, [0, 0], [0, 1], {\n    clamp: false\n  });\n  const x = useTransform(baseX, v => `${wrap(100, 0, v)}%`);\n  const directionFactor = useRef(1);\n  useAnimationFrame((t, delta) => {\n    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);\n    if (velocityFactor.get() < 0) {\n      directionFactor.current = -1;\n    } else if (velocityFactor.get() > 0) {\n      directionFactor.current = 1;\n    }\n    moveBy += directionFactor.current * moveBy * velocityFactor.get();\n    baseX.set(baseX.get() + moveBy);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"scroller\",\n      style: {\n        x: x,\n        width: '100rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        textAlign: 'center',\n        fontWeight: 'bold',\n        variant: \"h1\",\n        color: \"#FFF\",\n        children: [children, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(ParallaxText, \"vXPtw7zOnTipFF1aeUa9IWqP1xA=\", false, function () {\n  return [useMotionValue, useScroll, useVelocity, useSpring, useTransform, useTransform, useAnimationFrame];\n});\n_c = ParallaxText;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(ParallaxText, {\n      baseVelocity: -5,\n      children: \"LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ParallaxText, {\n      baseVelocity: 5,\n      children: \"START START START START START START START START START START START START START START START START START START START START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParallaxText\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useRef","motion","useSpring","useTransform","useMotionValue","useVelocity","useAnimationFrame","useScroll","wrap","Typography","jsxDEV","_jsxDEV","ParallaxText","children","baseVelocity","_s","baseX","scrollY","scrollVelocity","smoothVelocity","damping","stiffness","velocityFactor","clamp","x","v","directionFactor","t","delta","moveBy","current","get","set","div","className","style","width","textAlign","fontWeight","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_c2","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Break/PreSkill.jsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { motion, useSpring, useTransform, useMotionValue, useVelocity, useAnimationFrame, useScroll } from \"framer-motion\";\nimport { wrap } from \"@motionone/utils\";\nimport { Typography } from \"@mui/material\";\n\nfunction ParallaxText({ children, baseVelocity = 100 }) {\n  const baseX = useMotionValue(0);\n  const { scrollY } = useScroll();\n  const scrollVelocity = useVelocity(scrollY);\n  const smoothVelocity = useSpring(scrollVelocity, {\n    damping: 40,\n    stiffness: 400\n  });\n  const velocityFactor = useTransform(smoothVelocity, [0, 0], [0, 1], {\n    clamp: false\n  });\n\n  const x = useTransform(baseX, (v) => `${wrap(100, 0, v)}%`);\n\n  const directionFactor = useRef(1);\n  useAnimationFrame((t, delta) => {\n    let moveBy = directionFactor.current * baseVelocity * (delta / 1000);\n\n    if (velocityFactor.get() < 0) {\n      directionFactor.current = -1;\n    } else if (velocityFactor.get() > 0) {\n      directionFactor.current = 1;\n    }\n\n    moveBy += directionFactor.current * moveBy * velocityFactor.get();\n\n    baseX.set(baseX.get() + moveBy);\n  });\n\n  return (\n    <div>\n      <motion.div className=\"scroller\" style={{ x:x, width:'100rem' }}>\n        <Typography textAlign={'center'} fontWeight={'bold'} variant=\"h1\" color={\"#FFF\"}>{children} </Typography>\n      </motion.div>\n    </div>\n  );\n}\n\nexport default function App() {\n  return (\n    <section>\n      <ParallaxText baseVelocity={-5}>LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S LET'S</ParallaxText>\n      <ParallaxText baseVelocity={5}>START START START START START START START START START START START START START START START START START START START START</ParallaxText>\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}