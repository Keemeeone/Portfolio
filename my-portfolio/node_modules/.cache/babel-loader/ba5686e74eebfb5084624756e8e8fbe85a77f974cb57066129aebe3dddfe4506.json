{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Skill.jsx\";\nimport React, { useState } from \"react\";\nimport { Box, Container, Typography, Card, CardContent, Grid, LinearProgress, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@mui/material\";\nimport Paper from \"./Paper\";\n// Frontend Skills\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst frontendSkills = [{\n  title: \"JavaScript\",\n  level: 90\n}, {\n  title: \"React.js\",\n  level: 85\n}, {\n  title: \"HTML5\",\n  level: 90\n}, {\n  title: \"CSS3\",\n  level: 85\n}, {\n  title: \"HTML5\",\n  level: 95\n}, {\n  title: \"CSS\",\n  level: 100\n}, {\n  title: \"Figma\",\n  level: 90\n}];\n\n// Backend Skills\nconst backendSkills = [{\n  title: \"Java\",\n  level: 90\n}, {\n  title: \"C\",\n  level: 75\n}, {\n  title: \"Python\",\n  level: 65\n}, {\n  title: \"TypeScript\",\n  level: 70\n}, {\n  title: \"R\",\n  level: 80\n}, {\n  title: \"MySQL\",\n  level: 85\n}, {\n  title: \"React-Native\",\n  level: 85\n},\n// Note: React-Native can be used for mobile (frontend) or backend\n{\n  title: \"FastAPI\",\n  level: 60\n}, {\n  title: \"JSON\",\n  level: 90\n}, {\n  title: \"Node.js\",\n  level: 90\n}];\n\n// Common Skills (Tools and Practices)\nconst commonSkills = [{\n  title: \"Postman\",\n  level: 80\n}, {\n  title: \"Git\",\n  level: 95\n}, {\n  title: \"Linux\",\n  level: 70\n}];\n// const calculateAverageLevel = (skills) => {\n//     const totalLevels = skills.reduce((sum, skill) => sum + skill.level, 0);\n//     const averageLevel = totalLevels / skills.length;\n//     return Math.round(averageLevel * 100) / 100; // Round to two decimal places\n// };\n\n// // SkillCard Component\n// const SkillCard = ({ category, averageLevel, onClick }) => (\n//     <Grid item xs={12} sm={6} md={6} key={category}>\n//       <Card elevation={3} onClick={onClick}>\n//         <CardContent>\n//           <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n//             {category}\n//           </Typography>\n//           <LinearProgress variant=\"determinate\" value={averageLevel} />\n//           <Typography variant=\"body2\" color=\"textSecondary\">\n//             Average Level: {averageLevel}%\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     </Grid>\n//   );\nconst Skill = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        skills: frontendSkills,\n        category: \"Frontend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        skills: backendSkills,\n        category: \"Backend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        skills: commonSkills,\n        category: \"Common\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n};\n\n//   // Skill Component\n//   const Skill = () => {\n//     const [openModal, setOpenModal] = useState(false);\n//     const [selectedSkill, setSelectedSkill] = useState(null);\n\n//     const handleCardClick = (category, averageLevel) => {\n//       setSelectedSkill({ category, averageLevel });\n//       setOpenModal(true);\n//     };\n\n//     const handleCloseModal = () => {\n//       setOpenModal(false);\n//       setSelectedSkill(null);\n//     };\n\n//     return (\n//       <Container\n//         id=\"intro\"\n//         sx={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//           height: \"100%\",\n//         }}\n//       >\n//         <Typography variant=\"h2\" fontWeight={\"bold\"} align=\"center\" mb={10}>\n//           Skills\n//         </Typography>\n//         <Grid container spacing={3}>\n//           {/* Frontend Skills */}\n//           <SkillCard\n//             category=\"Frontend Skills\"\n//             averageLevel={calculateAverageLevel(frontendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Frontend Skills\", calculateAverageLevel(frontendSkills))\n//             }\n//           />\n\n//           {/* Backend Skills */}\n//           <SkillCard\n//             category=\"Backend Skills\"\n//             averageLevel={calculateAverageLevel(backendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Backend Skills\", calculateAverageLevel(backendSkills))\n//             }\n//           />\n\n//           {/* Common Skills */}\n//           <SkillCard\n//             category=\"Common Skills\"\n//             averageLevel={calculateAverageLevel(commonSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Common Skills\", calculateAverageLevel(commonSkills))\n//             }\n//           />\n//         </Grid>\n\n//         <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" mt={5} paragraph>\n//           Click cards to see details about skills\n//         </Typography>\n\n//         {/* Modal */}\n//         <Dialog open={openModal} onClose={handleCloseModal} maxWidth=\"sm\" fullWidth>\n//           <DialogTitle>{selectedSkill && selectedSkill.category}</DialogTitle>\n//           <DialogContent>\n//             {selectedSkill && (\n//               <>\n//                 <ul>\n//                   {selectedSkill.category === \"Frontend Skills\" &&\n//                     frontendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Backend Skills\" &&\n//                     backendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Common Skills\" &&\n//                     commonSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                 </ul>\n//               </>\n//             )}\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleCloseModal}>Close</Button>\n//           </DialogActions>\n//         </Dialog>\n//       </Container>\n//     );\n//   };\n_c = Skill;\nexport default Skill;\nvar _c;\n$RefreshReg$(_c, \"Skill\");","map":{"version":3,"names":["React","useState","Box","Container","Typography","Card","CardContent","Grid","LinearProgress","Dialog","DialogTitle","DialogContent","DialogActions","Button","Paper","jsxDEV","_jsxDEV","frontendSkills","title","level","backendSkills","commonSkills","Skill","children","skills","category","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Skill.jsx"],"sourcesContent":["\n\nimport React, { useState } from \"react\";\nimport {Box, Container, Typography, Card, CardContent, Grid, LinearProgress, Dialog, DialogTitle, DialogContent, DialogActions, Button } from \"@mui/material\";\nimport Paper from \"./Paper\";\n// Frontend Skills\nconst frontendSkills = [\n    { title: \"JavaScript\", level: 90 },\n    { title: \"React.js\", level: 85 },\n    { title: \"HTML5\", level: 90 },\n    { title: \"CSS3\", level: 85 },\n    { title: \"HTML5\", level: 95 },\n    { title: \"CSS\", level: 100 },\n    { title: \"Figma\", level: 90 },\n];\n\n// Backend Skills\nconst backendSkills = [\n    { title: \"Java\", level: 90 },\n    { title: \"C\", level: 75 },\n    { title: \"Python\", level: 65 },\n    { title: \"TypeScript\", level: 70 },\n    { title: \"R\", level: 80 },\n    { title: \"MySQL\", level: 85 },\n    { title: \"React-Native\", level: 85 }, // Note: React-Native can be used for mobile (frontend) or backend\n    { title: \"FastAPI\", level: 60 },\n    { title: \"JSON\", level: 90 },\n    { title: \"Node.js\", level: 90 },\n];\n\n// Common Skills (Tools and Practices)\nconst commonSkills = [\n    { title: \"Postman\", level: 80 },\n    { title: \"Git\", level: 95 },\n    { title: \"Linux\", level: 70 },\n];\n// const calculateAverageLevel = (skills) => {\n//     const totalLevels = skills.reduce((sum, skill) => sum + skill.level, 0);\n//     const averageLevel = totalLevels / skills.length;\n//     return Math.round(averageLevel * 100) / 100; // Round to two decimal places\n// };\n\n// // SkillCard Component\n// const SkillCard = ({ category, averageLevel, onClick }) => (\n//     <Grid item xs={12} sm={6} md={6} key={category}>\n//       <Card elevation={3} onClick={onClick}>\n//         <CardContent>\n//           <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\n//             {category}\n//           </Typography>\n//           <LinearProgress variant=\"determinate\" value={averageLevel} />\n//           <Typography variant=\"body2\" color=\"textSecondary\">\n//             Average Level: {averageLevel}%\n//           </Typography>\n//         </CardContent>\n//       </Card>\n//     </Grid>\n//   );\n    const Skill = () => {\n        return(\n            <Box>\n                <div>\n      <Paper skills={frontendSkills} category=\"Frontend\" />\n      <Paper skills={backendSkills} category=\"Backend\" />\n      <Paper skills={commonSkills} category=\"Common\" />\n    </div>\n            </Box>\n        )\n    }\n\n\n//   // Skill Component\n//   const Skill = () => {\n//     const [openModal, setOpenModal] = useState(false);\n//     const [selectedSkill, setSelectedSkill] = useState(null);\n  \n//     const handleCardClick = (category, averageLevel) => {\n//       setSelectedSkill({ category, averageLevel });\n//       setOpenModal(true);\n//     };\n  \n//     const handleCloseModal = () => {\n//       setOpenModal(false);\n//       setSelectedSkill(null);\n//     };\n  \n//     return (\n//       <Container\n//         id=\"intro\"\n//         sx={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//           height: \"100%\",\n//         }}\n//       >\n//         <Typography variant=\"h2\" fontWeight={\"bold\"} align=\"center\" mb={10}>\n//           Skills\n//         </Typography>\n//         <Grid container spacing={3}>\n//           {/* Frontend Skills */}\n//           <SkillCard\n//             category=\"Frontend Skills\"\n//             averageLevel={calculateAverageLevel(frontendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Frontend Skills\", calculateAverageLevel(frontendSkills))\n//             }\n//           />\n  \n//           {/* Backend Skills */}\n//           <SkillCard\n//             category=\"Backend Skills\"\n//             averageLevel={calculateAverageLevel(backendSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Backend Skills\", calculateAverageLevel(backendSkills))\n//             }\n//           />\n  \n//           {/* Common Skills */}\n//           <SkillCard\n//             category=\"Common Skills\"\n//             averageLevel={calculateAverageLevel(commonSkills)}\n//             onClick={() =>\n//               handleCardClick(\"Common Skills\", calculateAverageLevel(commonSkills))\n//             }\n//           />\n//         </Grid>\n  \n//         <Typography variant=\"body1\" align=\"center\" color=\"textSecondary\" mt={5} paragraph>\n//           Click cards to see details about skills\n//         </Typography>\n  \n//         {/* Modal */}\n//         <Dialog open={openModal} onClose={handleCloseModal} maxWidth=\"sm\" fullWidth>\n//           <DialogTitle>{selectedSkill && selectedSkill.category}</DialogTitle>\n//           <DialogContent>\n//             {selectedSkill && (\n//               <>\n//                 <ul>\n//                   {selectedSkill.category === \"Frontend Skills\" &&\n//                     frontendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Backend Skills\" &&\n//                     backendSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                   {selectedSkill.category === \"Common Skills\" &&\n//                     commonSkills.map((skill) => (\n//                       <li key={skill.title}>\n//                         {skill.title}: {skill.level}%\n//                       </li>\n//                     ))}\n//                 </ul>\n//               </>\n//             )}\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleCloseModal}>Close</Button>\n//           </DialogActions>\n//         </Dialog>\n//       </Container>\n//     );\n//   };\n  \n  export default Skill;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}