{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scroll = ({\n  components\n}) => {\n  _s();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const scrollRef = useRef();\n  const domTarget = useRef(null);\n  const [springProps, set] = useSpring(() => ({\n    opacity: 0\n  }));\n  useEffect(() => {\n    const handleScroll = () => {\n      const options = {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.8\n      };\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const newOpacity = Math.max(1, Math.max(0, (window.innerHeight - entry.boundingClientRect.top) / entry.boundingClientRect.height));\n            set({\n              opacity: newOpacity\n            });\n          } else {\n            set({\n              opacity: 0\n            });\n          }\n        });\n      }, options);\n      if (domTarget.current) {\n        observer.observe(domTarget.current);\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    handleScroll();\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [set, domTarget]);\n  const handleScroll = () => {\n    const options = {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.8\n    };\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const scrollTop = scrollRef.current.scrollTop;\n          const componentHeight = scrollRef.current.clientHeight;\n          const newIndex = Math.floor(scrollTop / componentHeight);\n          setActiveIndex(newIndex);\n          setScrollPosition(scrollTop);\n        } else {\n          setActiveIndex(0);\n        }\n      });\n    }, options);\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      const componentHeight = scrollRef.current.clientHeight;\n      const newIndex = Math.floor(scrollRef.current.scrollTop / componentHeight);\n      setActiveIndex(newIndex);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  const scrollToComponent = index => {\n    const componentHeight = scrollRef.current.clientHeight;\n    scrollRef.current.scrollTo({\n      top: index * componentHeight,\n      behavior: \"smooth\"\n    });\n  };\n  const updateSlideState = index => {\n    scrollToComponent(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef,\n    onScroll: handleScroll,\n    style: {\n      height: \"100vh\",\n      overflowY: \"scroll\",\n      scrollBehavior: \"smooth\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: 'vertical',\n      length: components.length,\n      currIdx: activeIndex,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), components.map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100vh\"\n      },\n      children: /*#__PURE__*/React.cloneElement(component, {\n        isActive: index === activeIndex,\n        scrollPosition\n      })\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Scroll, \"saK4cJzmnpByWmRkJGnKjSNUvyI=\", true);\n_c = Scroll;\nexport default Scroll;\nvar _c;\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Header","jsxDEV","_jsxDEV","Scroll","components","_s","activeIndex","setActiveIndex","scrollPosition","setScrollPosition","scrollRef","domTarget","springProps","set","useSpring","opacity","handleScroll","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","newOpacity","Math","max","window","innerHeight","boundingClientRect","top","height","current","observe","addEventListener","removeEventListener","scrollTop","componentHeight","clientHeight","newIndex","floor","handleResize","scrollToComponent","index","scrollTo","behavior","updateSlideState","ref","onScroll","style","overflowY","scrollBehavior","children","orientation","length","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","map","component","cloneElement","isActive","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Header from \"../Header/Header\";\n\nconst Scroll = ({ components }) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const scrollRef = useRef();\n\n    const domTarget = useRef(null);\n    const [springProps, set] = useSpring(() => ({ opacity: 0 }));\n    \n    useEffect(() => {\n        const handleScroll = () => {\n            const options = {\n                root: null,\n                rootMargin: '0px',\n                threshold: 0.8,\n            };\n\n            const observer = new IntersectionObserver((entries) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        const newOpacity = Math.max(1, Math.max(0, (window.innerHeight - entry.boundingClientRect.top) / (entry.boundingClientRect.height)));\n                        set({ opacity: newOpacity });\n                    } else {\n                        set({ opacity: 0 });\n                    }\n                });\n            }, options);\n\n            if (domTarget.current) {\n                observer.observe(domTarget.current);\n            }\n        };\n\n        window.addEventListener(\"scroll\", handleScroll);\n        handleScroll();\n\n        return () => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    }, [set, domTarget]);\n\n    const handleScroll = () => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.8,\n        };\n\n        const observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    const scrollTop = scrollRef.current.scrollTop;\n                    const componentHeight = scrollRef.current.clientHeight;\n                    const newIndex = Math.floor(scrollTop / componentHeight);\n                    setActiveIndex(newIndex);\n                    setScrollPosition(scrollTop);\n                } else {\n                    setActiveIndex(0);\n                }\n            });\n        }, options);        \n    };\n\n    useEffect(() => {\n        const handleResize = () => {\n            const componentHeight = scrollRef.current.clientHeight;\n            const newIndex = Math.floor(scrollRef.current.scrollTop / componentHeight);\n            setActiveIndex(newIndex);\n        };\n\n        window.addEventListener(\"resize\", handleResize);\n\n        return () => {\n            window.removeEventListener(\"resize\", handleResize);\n        };\n    }, []);\n\n    const scrollToComponent = (index) => {\n        const componentHeight = scrollRef.current.clientHeight;\n        scrollRef.current.scrollTo({\n            top: index * componentHeight,\n            behavior: \"smooth\",\n        });\n    };\n\n    const updateSlideState = (index) => {\n        scrollToComponent(index);\n    };\n\n    return (\n        <div\n            ref={scrollRef}\n            onScroll={handleScroll}\n            style={{\n                height: \"100vh\",\n                overflowY: \"scroll\",\n                scrollBehavior: \"smooth\",\n            }}\n        >\n            <Header\n                orientation={'vertical'}\n                length={components.length}\n                currIdx={activeIndex}\n                clickHandler={updateSlideState}\n            />\n            {components.map((component, index) => (\n                <div key={index} style={{ height: \"100vh\" }}>\n                    {React.cloneElement(component, { isActive: index === activeIndex, scrollPosition })}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Scroll;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}