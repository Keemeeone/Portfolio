{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { useSpring, animated, config } from \"@react-spring/web\";\nimport { useInView } from \"react-intersection-observer\";\nimport { Card, CardContent, Typography, useTheme, useMediaQuery, responsiveFontSizes, ThemeProvider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nconst SkillCard = ({\n  skill\n}) => {\n  _s();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const responsiveTheme = responsiveFontSizes(theme);\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.5 // Adjust threshold as needed\n  });\n  const [{\n    x,\n    y,\n    rotateX,\n    rotateY,\n    rotateZ,\n    zoom,\n    scale,\n    color\n  }, api] = useSpring(() => ({\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    scale: 1,\n    zoom: 0,\n    x: 0,\n    y: 0,\n    color: getRandomColor(),\n    config: config.default\n  }));\n  useEffect(() => {\n    if (inView) {\n      // Trigger flying-in effect when the component is in the viewport\n      api.start({\n        rotateX: 0,\n        rotateY: 0,\n        scale: 1,\n        zoom: 0,\n        immediate: true\n      });\n    }\n  }, [inView, api]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: responsiveTheme,\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      ref: el => {\n        ref(el);\n        // Attach the ref to the intersection observer\n      },\n      style: {\n        transform: \"perspective(600px)\",\n        x,\n        y,\n        scale: to([scale, zoom], (s, z) => s + z),\n        rotateX,\n        rotateY,\n        rotateZ,\n        backgroundColor: color\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          width: \"90%\",\n          height: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            fontWeight: \"bold\",\n            sx: {\n              marginLeft: {\n                xs: \"-15px\",\n                sm: \"-15px\",\n                md: \"0px\"\n              },\n              fontSize: {\n                xs: \"8px\",\n                sm: \"8px\",\n                md: \"16px\"\n              }\n            },\n            children: skill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SkillCard, \"fPgr/Vsl+EzdL9q+Gmlnr2gbUGk=\", false, function () {\n  return [useTheme, useMediaQuery, useInView, useSpring];\n});\n_c = SkillCard;\nexport default SkillCard;\nvar _c;\n$RefreshReg$(_c, \"SkillCard\");","map":{"version":3,"names":["React","useRef","useEffect","useSpring","animated","config","useInView","Card","CardContent","Typography","useTheme","useMediaQuery","responsiveFontSizes","ThemeProvider","jsxDEV","_jsxDEV","getRandomColor","letters","color","i","Math","floor","random","SkillCard","skill","_s","theme","isSmallScreen","breakpoints","down","responsiveTheme","ref","inView","triggerOnce","threshold","x","y","rotateX","rotateY","rotateZ","zoom","scale","api","default","start","immediate","children","div","el","style","transform","to","s","z","backgroundColor","variant","sx","width","height","fontWeight","marginLeft","xs","sm","md","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { useSpring, animated, config } from \"@react-spring/web\";\nimport { useInView } from \"react-intersection-observer\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  useTheme,\n  useMediaQuery,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@mui/material\";\n\nconst getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst SkillCard = ({ skill }) => {\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const responsiveTheme = responsiveFontSizes(theme);\n\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n    threshold: 0.5, // Adjust threshold as needed\n  });\n\n  const [{ x, y, rotateX, rotateY, rotateZ, zoom, scale, color }, api] = useSpring(() => ({\n    rotateX: 0,\n    rotateY: 0,\n    rotateZ: 0,\n    scale: 1,\n    zoom: 0,\n    x: 0,\n    y: 0,\n    color: getRandomColor(),\n    config: config.default,\n  }));\n\n  useEffect(() => {\n    if (inView) {\n      // Trigger flying-in effect when the component is in the viewport\n      api.start({\n        rotateX: 0,\n        rotateY: 0,\n        scale: 1,\n        zoom: 0,\n        immediate: true,\n      });\n    }\n  }, [inView, api]);\n\n  return (\n    <ThemeProvider theme={responsiveTheme}>\n      <animated.div\n        ref={(el) => {\n          ref(el);\n          // Attach the ref to the intersection observer\n        }}\n        style={{\n          transform: \"perspective(600px)\",\n          x,\n          y,\n          scale: to([scale, zoom], (s, z) => s + z),\n          rotateX,\n          rotateY,\n          rotateZ,\n          backgroundColor: color,\n        }}\n      >\n        <Card variant=\"outlined\" sx={{ width: \"90%\", height: \"100%\" }}>\n          <CardContent>\n            <Typography\n              fontWeight={\"bold\"}\n              sx={{\n                marginLeft: { xs: \"-15px\", sm: \"-15px\", md: \"0px\" },\n                fontSize: { xs: \"8px\", sm: \"8px\", md: \"16px\" },\n              }}\n            >\n              {skill}\n            </Typography>\n          </CardContent>\n        </Card>\n      </animated.div>\n    </ThemeProvider>\n  );\n};\n\nexport default SkillCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}