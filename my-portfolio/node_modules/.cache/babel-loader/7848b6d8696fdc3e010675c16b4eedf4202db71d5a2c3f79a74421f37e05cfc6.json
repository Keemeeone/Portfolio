{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide, useMediaQuery, useTheme } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\nimport SwipeableViews from 'react-swipeable-views';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slides = props => {\n  _s();\n  const {\n    components\n  } = props;\n  const transSpeed = 500;\n  const [slideState, setSlideState] = useState({\n    currentIdx: 0,\n    previousIdx: 0,\n    isSwitching: false\n  });\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setSlideState(prevState => ({\n      ...prevState,\n      currentIdx: 0,\n      previousIdx: 0\n    }));\n  }, [components]);\n  const updateSlideState = useCallback(newIdx => {\n    setSlideState(prevState => ({\n      ...prevState,\n      previousIdx: prevState.currentIdx,\n      isSwitching: true\n    }));\n    window.setTimeout(() => {\n      setSlideState(prevState => ({\n        ...prevState,\n        isSwitching: false,\n        currentIdx: newIdx\n      }));\n    }, transSpeed);\n  }, [transSpeed]);\n  const isSmallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\n  const handleSwipe = index => {\n    if (index !== slideState.currentIdx) {\n      updateSlideState(index);\n    }\n  };\n  const slideStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'fixed'\n  };\n  const containerStyle = {\n    overflowY: 'hidden'\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: containerRef,\n    sx: {\n      overscrollBehavior: 'none',\n      ...containerStyle\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: isSmallScreen ? 'horizontal' : 'vertical',\n      length: components.length,\n      currIdx: slideState.currentIdx,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      orientation: isSmallScreen ? 'horizontal' : 'vertical',\n      length: components.length,\n      currIdx: slideState.currentIdx,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SwipeableViews, {\n      index: slideState.currentIdx,\n      onChangeIndex: handleSwipe,\n      enableMouseEvents: !isSmallScreen,\n      resistance: true,\n      children: components.map((component, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ...slideStyle,\n          zIndex: 2\n        },\n        children: component\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Slides, \"eb7C7o2c+l4jh3la6e20uKkh/uw=\", false, function () {\n  return [useMediaQuery, useTheme];\n});\n_c = Slides;\nexport default Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Box","Slide","useMediaQuery","useTheme","NavBar","Header","SwipeableViews","jsxDEV","_jsxDEV","Slides","props","_s","components","transSpeed","slideState","setSlideState","currentIdx","previousIdx","isSwitching","containerRef","prevState","updateSlideState","newIdx","window","setTimeout","isSmallScreen","breakpoints","down","handleSwipe","index","slideStyle","width","height","position","containerStyle","overflowY","ref","sx","overscrollBehavior","children","orientation","length","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","onChangeIndex","enableMouseEvents","resistance","map","component","zIndex","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide, useMediaQuery, useTheme } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\nimport SwipeableViews from 'react-swipeable-views';\n\n\nconst Slides = (props) => {\n    const { components } = props;\n    const transSpeed = 500;\n\n    const [slideState, setSlideState] = useState({\n        currentIdx: 0,\n        previousIdx: 0,\n        isSwitching: false,\n    });\n\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        setSlideState((prevState) => ({\n            ...prevState,\n            currentIdx: 0,\n            previousIdx: 0,\n        }));\n    }, [components]);\n\n    const updateSlideState = useCallback(\n        (newIdx) => {\n            setSlideState((prevState) => ({\n                ...prevState,\n                previousIdx: prevState.currentIdx,\n                isSwitching: true,\n            }));\n\n            window.setTimeout(() => {\n                setSlideState((prevState) => ({\n                    ...prevState,\n                    isSwitching: false,\n                    currentIdx: newIdx,\n                }));\n            }, transSpeed);\n        },\n        [transSpeed]\n    );\n\n    const isSmallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const handleSwipe = (index) => {\n        if (index !== slideState.currentIdx) {\n            updateSlideState(index);\n        }\n    };\n\n    const slideStyle = {\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n    };\n\n    const containerStyle = {\n        overflowY: 'hidden',\n    };\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{ overscrollBehavior: 'none', ...containerStyle }}\n        >\n            <Header\n                orientation={isSmallScreen ? 'horizontal' : 'vertical'}\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n            <NavBar\n                orientation={isSmallScreen ? 'horizontal' : 'vertical'}\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n\n            <SwipeableViews\n                index={slideState.currentIdx}\n                onChangeIndex={handleSwipe}\n                enableMouseEvents={!isSmallScreen}\n                resistance\n            >\n                {components.map((component, index) => (\n                    <Box key={index} sx={{ ...slideStyle, zIndex: 2 }}>\n                        {component}\n                    </Box>\n                ))}\n            </SwipeableViews>\n        </Box>\n    );\n};\n\nexport default Slides;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,GAAG,EAAEC,KAAK,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,eAAe;AACnE,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,cAAc,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAW,CAAC,GAAGF,KAAK;EAC5B,MAAMG,UAAU,GAAG,GAAG;EAEtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC;IACzCoB,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE;EACjB,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACZkB,aAAa,CAAEK,SAAS,KAAM;MAC1B,GAAGA,SAAS;MACZJ,UAAU,EAAE,CAAC;MACbC,WAAW,EAAE;IACjB,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,MAAMS,gBAAgB,GAAGvB,WAAW,CAC/BwB,MAAM,IAAK;IACRP,aAAa,CAAEK,SAAS,KAAM;MAC1B,GAAGA,SAAS;MACZH,WAAW,EAAEG,SAAS,CAACJ,UAAU;MACjCE,WAAW,EAAE;IACjB,CAAC,CAAC,CAAC;IAEHK,MAAM,CAACC,UAAU,CAAC,MAAM;MACpBT,aAAa,CAAEK,SAAS,KAAM;QAC1B,GAAGA,SAAS;QACZF,WAAW,EAAE,KAAK;QAClBF,UAAU,EAAEM;MAChB,CAAC,CAAC,CAAC;IACP,CAAC,EAAET,UAAU,CAAC;EAClB,CAAC,EACD,CAACA,UAAU,CACf,CAAC;EAED,MAAMY,aAAa,GAAGvB,aAAa,CAACC,QAAQ,CAAC,CAAC,CAACuB,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAEtE,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAIA,KAAK,KAAKf,UAAU,CAACE,UAAU,EAAE;MACjCK,gBAAgB,CAACQ,KAAK,CAAC;IAC3B;EACJ,CAAC;EAED,MAAMC,UAAU,GAAG;IACfC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACd,CAAC;EAED,MAAMC,cAAc,GAAG;IACnBC,SAAS,EAAE;EACf,CAAC;EAED,oBACI3B,OAAA,CAACR,GAAG;IACAoC,GAAG,EAAEjB,YAAa;IAClBkB,EAAE,EAAE;MAAEC,kBAAkB,EAAE,MAAM;MAAE,GAAGJ;IAAe,CAAE;IAAAK,QAAA,gBAEtD/B,OAAA,CAACH,MAAM;MACHmC,WAAW,EAAEf,aAAa,GAAG,YAAY,GAAG,UAAW;MACvDgB,MAAM,EAAE7B,UAAU,CAAC6B,MAAO;MAC1BC,OAAO,EAAE5B,UAAU,CAACE,UAAW;MAC/B2B,YAAY,EAAEtB;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFvC,OAAA,CAACJ,MAAM;MACHoC,WAAW,EAAEf,aAAa,GAAG,YAAY,GAAG,UAAW;MACvDgB,MAAM,EAAE7B,UAAU,CAAC6B,MAAO;MAC1BC,OAAO,EAAE5B,UAAU,CAACE,UAAW;MAC/B2B,YAAY,EAAEtB;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAEFvC,OAAA,CAACF,cAAc;MACXuB,KAAK,EAAEf,UAAU,CAACE,UAAW;MAC7BgC,aAAa,EAAEpB,WAAY;MAC3BqB,iBAAiB,EAAE,CAACxB,aAAc;MAClCyB,UAAU;MAAAX,QAAA,EAET3B,UAAU,CAACuC,GAAG,CAAC,CAACC,SAAS,EAAEvB,KAAK,kBAC7BrB,OAAA,CAACR,GAAG;QAAaqC,EAAE,EAAE;UAAE,GAAGP,UAAU;UAAEuB,MAAM,EAAE;QAAE,CAAE;QAAAd,QAAA,EAC7Ca;MAAS,GADJvB,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd,CAAC;AAACpC,EAAA,CAzFIF,MAAM;EAAA,QAuCcP,aAAa,EAACC,QAAQ;AAAA;AAAAmD,EAAA,GAvC1C7C,MAAM;AA2FZ,eAAeA,MAAM;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}