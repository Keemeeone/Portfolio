{"ast":null,"code":"// ProSkill.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/import{useEffect}from\"react\";import{motion,useTransform,useMotionValue}from\"framer-motion\";import{wrap}from\"@motionone/utils\";import{Typography,useTheme,useMediaQuery}from\"@mui/material\";/**\n * ParallaxText component for displaying text with parallax effect.\n *\n * @param {Object} props - Component properties.\n * @param {ReactNode} props.children - Text content to be displayed.\n * @param {number} [props.baseVelocity=100] - Base velocity for parallax effect.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @returns {JSX.Element} - ParallaxText component JSX.\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ParallaxText(_ref){let{children,baseVelocity=100,scrollPosition}=_ref;const baseX=useMotionValue(0);const x=useTransform(baseX,v=>\"\".concat(wrap(-50,50,v),\"%\"));useEffect(()=>{const updateX=()=>{baseX.set(scrollPosition/1000*baseVelocity);};updateX();// Add scroll event listener\nwindow.addEventListener(\"scroll\",updateX);return()=>{// Remove scroll event listener on component unmount\nwindow.removeEventListener(\"scroll\",updateX);};},[scrollPosition,baseVelocity,baseX]);const theme=useTheme();const isSmallScreen=useMediaQuery(theme.breakpoints.down(\"sm\"));return/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center',overflowX:'hidden'},children:/*#__PURE__*/_jsx(motion.div,{style:{x:x,width:'100%'},children:/*#__PURE__*/_jsx(Typography,{color:'#FFF',fontWeight:\"bold\",variant:\"h1\",style:{fontSize:isSmallScreen?\"3em\":\"5.5rem\",textAlign:\"center\"},children:children})})});}/**\n * ProSkill component displaying parallax text sections.\n *\n * @param {Object} props - Component properties.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @returns {JSX.Element} - ProSkill component JSX.\n */export default function ProSkill(_ref2){let{scrollPosition}=_ref2;return/*#__PURE__*/_jsxs(\"section\",{style:{paddingTop:'10rem'},children:[/*#__PURE__*/_jsx(ParallaxText,{scrollPosition:scrollPosition,baseVelocity:-10,children:\"LET'S\"}),/*#__PURE__*/_jsx(ParallaxText,{scrollPosition:scrollPosition,baseVelocity:10,children:\"START!\"})]});}","map":{"version":3,"names":["useEffect","motion","useTransform","useMotionValue","wrap","Typography","useTheme","useMediaQuery","jsx","_jsx","jsxs","_jsxs","ParallaxText","_ref","children","baseVelocity","scrollPosition","baseX","x","v","concat","updateX","set","window","addEventListener","removeEventListener","theme","isSmallScreen","breakpoints","down","style","display","justifyContent","alignItems","overflowX","div","width","color","fontWeight","variant","fontSize","textAlign","ProSkill","_ref2","paddingTop"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Break/PreSkill.jsx"],"sourcesContent":["// ProSkill.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport { useEffect } from \"react\";\nimport { motion, useTransform, useMotionValue } from \"framer-motion\";\nimport { wrap } from \"@motionone/utils\";\nimport { Typography, useTheme, useMediaQuery } from \"@mui/material\";\n\n/**\n * ParallaxText component for displaying text with parallax effect.\n *\n * @param {Object} props - Component properties.\n * @param {ReactNode} props.children - Text content to be displayed.\n * @param {number} [props.baseVelocity=100] - Base velocity for parallax effect.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @returns {JSX.Element} - ParallaxText component JSX.\n */\nfunction ParallaxText({ children, baseVelocity = 100, scrollPosition }) {\n    const baseX = useMotionValue(0);\n\n    const x = useTransform(baseX, (v) => `${wrap(-50, 50, v)}%`);\n\n    useEffect(() => {\n        const updateX = () => {\n            baseX.set((scrollPosition/1000) * baseVelocity);\n        };\n\n        updateX();\n\n        // Add scroll event listener\n        window.addEventListener(\"scroll\", updateX);\n\n        return () => {\n            // Remove scroll event listener on component unmount\n            window.removeEventListener(\"scroll\", updateX);\n        };\n    }, [scrollPosition, baseVelocity, baseX]);\n\n    const theme = useTheme();\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center',overflowX: 'hidden'  }}>\n            <motion.div style={{ x: x, width: '100%' }}>\n                <Typography color={'#FFF'} fontWeight={\"bold\"} variant=\"h1\" style={{ fontSize: isSmallScreen ? \"3em\" : \"5.5rem\", textAlign: \"center\" }}>\n                    {children}\n                </Typography>\n            </motion.div>\n        </div>\n    );\n}\n\n/**\n * ProSkill component displaying parallax text sections.\n *\n * @param {Object} props - Component properties.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @returns {JSX.Element} - ProSkill component JSX.\n */\nexport default function ProSkill({ scrollPosition }) {\n    return (\n        <section style={{paddingTop:'10rem'}}>\n            <ParallaxText scrollPosition={scrollPosition} baseVelocity={-10}>LET'S</ParallaxText>\n            <ParallaxText scrollPosition={scrollPosition} baseVelocity={10}>START!</ParallaxText>\n        </section>\n    );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,EAEA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,MAAM,CAAEC,YAAY,CAAEC,cAAc,KAAQ,eAAe,CACpE,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,UAAU,CAAEC,QAAQ,CAAEC,aAAa,KAAQ,eAAe,CAEnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBASA,QAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAmD,IAAlD,CAAEC,QAAQ,CAAEC,YAAY,CAAG,GAAG,CAAEC,cAAe,CAAC,CAAAH,IAAA,CAClE,KAAM,CAAAI,KAAK,CAAGd,cAAc,CAAC,CAAC,CAAC,CAE/B,KAAM,CAAAe,CAAC,CAAGhB,YAAY,CAACe,KAAK,CAAGE,CAAC,KAAAC,MAAA,CAAQhB,IAAI,CAAC,CAAC,EAAE,CAAE,EAAE,CAAEe,CAAC,CAAC,KAAG,CAAC,CAE5DnB,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAqB,OAAO,CAAGA,CAAA,GAAM,CAClBJ,KAAK,CAACK,GAAG,CAAEN,cAAc,CAAC,IAAI,CAAID,YAAY,CAAC,CACnD,CAAC,CAEDM,OAAO,CAAC,CAAC,CAET;AACAE,MAAM,CAACC,gBAAgB,CAAC,QAAQ,CAAEH,OAAO,CAAC,CAE1C,MAAO,IAAM,CACT;AACAE,MAAM,CAACE,mBAAmB,CAAC,QAAQ,CAAEJ,OAAO,CAAC,CACjD,CAAC,CACL,CAAC,CAAE,CAACL,cAAc,CAAED,YAAY,CAAEE,KAAK,CAAC,CAAC,CAEzC,KAAM,CAAAS,KAAK,CAAGpB,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAqB,aAAa,CAAGpB,aAAa,CAACmB,KAAK,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAEjE,mBACIpB,IAAA,QAAKqB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAQ,CAAEC,UAAU,CAAE,QAAQ,CAACC,SAAS,CAAE,QAAU,CAAE,CAAApB,QAAA,cACjGL,IAAA,CAACR,MAAM,CAACkC,GAAG,EAACL,KAAK,CAAE,CAAEZ,CAAC,CAAEA,CAAC,CAAEkB,KAAK,CAAE,MAAO,CAAE,CAAAtB,QAAA,cACvCL,IAAA,CAACJ,UAAU,EAACgC,KAAK,CAAE,MAAO,CAACC,UAAU,CAAE,MAAO,CAACC,OAAO,CAAC,IAAI,CAACT,KAAK,CAAE,CAAEU,QAAQ,CAAEb,aAAa,CAAG,KAAK,CAAG,QAAQ,CAAEc,SAAS,CAAE,QAAS,CAAE,CAAA3B,QAAA,CAClIA,QAAQ,CACD,CAAC,CACL,CAAC,CACZ,CAAC,CAEd,CAEA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAAS,CAAA4B,QAAQA,CAAAC,KAAA,CAAqB,IAApB,CAAE3B,cAAe,CAAC,CAAA2B,KAAA,CAC/C,mBACIhC,KAAA,YAASmB,KAAK,CAAE,CAACc,UAAU,CAAC,OAAO,CAAE,CAAA9B,QAAA,eACjCL,IAAA,CAACG,YAAY,EAACI,cAAc,CAAEA,cAAe,CAACD,YAAY,CAAE,CAAC,EAAG,CAAAD,QAAA,CAAC,OAAK,CAAc,CAAC,cACrFL,IAAA,CAACG,YAAY,EAACI,cAAc,CAAEA,cAAe,CAACD,YAAY,CAAE,EAAG,CAAAD,QAAA,CAAC,QAAM,CAAc,CAAC,EAChF,CAAC,CAElB"},"metadata":{},"sourceType":"module","externalDependencies":[]}