{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide, useMediaQuery, useTheme, ButtonBase } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slides = props => {\n  _s();\n  const {\n    components\n  } = props;\n  const transSpeed = 500;\n  const [slideState, setSlideState] = useState({\n    currentIdx: 0,\n    previousIdx: 0,\n    isSwitching: false\n  });\n  const containerRef = useRef(null);\n  useEffect(() => {\n    setSlideState(prevState => ({\n      ...prevState,\n      currentIdx: 0,\n      previousIdx: 0\n    }));\n  }, [components]);\n  const updateSlideState = useCallback(newIdx => {\n    setSlideState(prevState => ({\n      ...prevState,\n      previousIdx: prevState.currentIdx,\n      isSwitching: true\n    }));\n    window.setTimeout(() => {\n      setSlideState(prevState => ({\n        ...prevState,\n        isSwitching: false,\n        currentIdx: newIdx\n      }));\n    }, transSpeed);\n  }, [transSpeed]);\n  const isSmallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\n  const touchStartY = useRef(0);\n  const handleTouchStart = e => {\n    touchStartY.current = e.touches[0].clientY;\n  };\n  const handleTouchEnd = e => {\n    const touchEndY = e.changedTouches[0].clientY;\n    const deltaY = touchEndY - touchStartY.current;\n    if (deltaY > 50 && slideState.currentIdx < components.length - 1) {\n      updateSlideState(slideState.currentIdx + 1);\n    } else if (deltaY < -50 && slideState.currentIdx > 0) {\n      updateSlideState(slideState.currentIdx - 1);\n    }\n  };\n  const slideStyle = {\n    width: '100%',\n    height: '100%',\n    position: 'fixed'\n  };\n  const containerStyle = {\n    overflowY: 'hidden'\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: containerRef,\n    sx: {\n      overscrollBehavior: 'none',\n      ...containerStyle\n    },\n    onTouchStart: handleTouchStart,\n    onTouchEnd: handleTouchEnd,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: isSmallScreen ? 'horizontal' : 'vertical',\n      length: components.length,\n      currIdx: slideState.currentIdx,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      orientation: isSmallScreen ? 'horizontal' : 'vertical',\n      length: components.length,\n      currIdx: slideState.currentIdx,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Slide, {\n      direction: isSmallScreen ? 'left' : 'up',\n      in: !slideState.isSwitching,\n      timeout: transSpeed,\n      children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            ...slideStyle,\n            zIndex: 2\n          },\n          children: components[slideState.currentIdx]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Slides, \"NWiwbafB13htKMN3MBlAR9fBVdk=\", false, function () {\n  return [useMediaQuery, useTheme];\n});\n_c = Slides;\nexport default Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Box","Slide","useMediaQuery","useTheme","ButtonBase","NavBar","Header","jsxDEV","_jsxDEV","Slides","props","_s","components","transSpeed","slideState","setSlideState","currentIdx","previousIdx","isSwitching","containerRef","prevState","updateSlideState","newIdx","window","setTimeout","isSmallScreen","breakpoints","down","touchStartY","handleTouchStart","e","current","touches","clientY","handleTouchEnd","touchEndY","changedTouches","deltaY","length","slideStyle","width","height","position","containerStyle","overflowY","ref","sx","overscrollBehavior","onTouchStart","onTouchEnd","children","orientation","currIdx","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","direction","in","timeout","style","zIndex","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Home/Slides.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Slide, useMediaQuery, useTheme, ButtonBase } from '@mui/material';\nimport NavBar from './Slides/NavBar';\nimport Header from '../Header/Header';\n\nconst Slides = (props) => {\n    const { components } = props;\n    const transSpeed = 500;\n\n    const [slideState, setSlideState] = useState({\n        currentIdx: 0,\n        previousIdx: 0,\n        isSwitching: false,\n    });\n\n    const containerRef = useRef(null);\n\n    useEffect(() => {\n        setSlideState((prevState) => ({\n            ...prevState,\n            currentIdx: 0,\n            previousIdx: 0,\n        }));\n    }, [components]);\n\n    const updateSlideState = useCallback(\n        (newIdx) => {\n            setSlideState((prevState) => ({\n                ...prevState,\n                previousIdx: prevState.currentIdx,\n                isSwitching: true,\n            }));\n\n            window.setTimeout(() => {\n                setSlideState((prevState) => ({\n                    ...prevState,\n                    isSwitching: false,\n                    currentIdx: newIdx,\n                }));\n            }, transSpeed);\n        },\n        [transSpeed]\n    );\n\n    const isSmallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\n\n    const touchStartY = useRef(0);\n\n    const handleTouchStart = (e) => {\n        touchStartY.current = e.touches[0].clientY;\n    };\n\n    const handleTouchEnd = (e) => {\n        const touchEndY = e.changedTouches[0].clientY;\n        const deltaY = touchEndY - touchStartY.current;\n\n        if (deltaY > 50 && slideState.currentIdx < components.length - 1) {\n            updateSlideState(slideState.currentIdx + 1);\n        } else if (deltaY < -50 && slideState.currentIdx > 0) {\n            updateSlideState(slideState.currentIdx - 1);\n        }\n    };\n\n    const slideStyle = {\n        width: '100%',\n        height: '100%',\n        position: 'fixed',\n    };\n\n    const containerStyle = {\n        overflowY: 'hidden',\n    };\n\n    return (\n        <Box\n            ref={containerRef}\n            sx={{ overscrollBehavior: 'none', ...containerStyle }}\n            onTouchStart={handleTouchStart}\n            onTouchEnd={handleTouchEnd}\n        >\n            <Header\n                orientation={isSmallScreen ? 'horizontal' : 'vertical'}\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n            <NavBar\n                orientation={isSmallScreen ? 'horizontal' : 'vertical'}\n                length={components.length}\n                currIdx={slideState.currentIdx}\n                clickHandler={updateSlideState}\n            />\n\n            <Slide direction={isSmallScreen ? 'left' : 'up'} in={!slideState.isSwitching} timeout={transSpeed}>\n                <ButtonBase style={{ width: '100%', height: '100%' }}>\n                    <Box sx={{ ...slideStyle, zIndex: 2 }}>\n                        {components[slideState.currentIdx]}\n                    </Box>\n                </ButtonBase>\n            </Slide>\n        </Box>\n    );\n};\n\nexport default Slides;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}