{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Break/PreAI.jsx\",\n  _s = $RefreshSig$();\n// PreSkill.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport { useEffect } from \"react\";\nimport { motion, useTransform, useMotionValue } from \"framer-motion\";\nimport { wrap } from \"@motionone/utils\";\nimport { Typography, useTheme, useMediaQuery } from \"@mui/material\";\n\n/**\n * ParallaxText component for displaying text and img with parallax effect.\n *\n * @param {Object} props - Component properties.\n * @param {ReactNode} props.children - Text content to be displayed.\n * @param {number} [props.baseVelocity=100] - Base velocity for parallax effect.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @param {string} [props.img] - Image source URL.\n * @returns {JSX.Element} - ParallaxText component JSX.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ParallaxText({\n  children,\n  baseVelocity = 100,\n  scrollPosition,\n  img\n}) {\n  _s();\n  const baseX = useMotionValue(0);\n  const x = useTransform(baseX, v => `${wrap(-50, 50, v)}%`);\n  useEffect(() => {\n    const updateX = () => {\n      baseX.set(scrollPosition / 1400 * baseVelocity);\n    };\n    updateX();\n\n    // Add scroll event listener\n    window.addEventListener(\"scroll\", updateX);\n    return () => {\n      // Remove scroll event listener on component unmount\n      window.removeEventListener(\"scroll\", updateX);\n    };\n  }, [scrollPosition, baseVelocity, baseX]);\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflowX: 'hidden'\n    },\n    children: img ? /*#__PURE__*/_jsxDEV(motion.div, {\n      style: {\n        x: x\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"Parallax\",\n        style: {\n          width: '70%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n      style: {\n        x: x,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: '#FFF',\n        fontWeight: \"bold\",\n        variant: \"h1\",\n        style: {\n          fontSize: isSmallScreen ? \"2em\" : \"5.5rem\",\n          textAlign: \"center\"\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n/**\n * PreAI component displaying parallax text sections.\n *\n * @param {Object} props - Component properties.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @returns {JSX.Element} - ProSkill component JSX.\n */\n_s(ParallaxText, \"odBVc08g5PdDhiRceVOtBf+2T6Q=\", false, function () {\n  return [useMotionValue, useTransform, useTheme, useMediaQuery];\n});\n_c = ParallaxText;\nexport default function PreAI({\n  scrollPosition\n}) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      paddingTop: '10rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ParallaxText, {\n      scrollPosition: scrollPosition,\n      baseVelocity: -40,\n      img: \"./robot.png?as=webp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ParallaxText, {\n      scrollPosition: scrollPosition,\n      baseVelocity: -10,\n      children: \"BEFORE START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ParallaxText, {\n      scrollPosition: scrollPosition,\n      baseVelocity: 0,\n      children: \"CHAT WITH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ParallaxText, {\n      scrollPosition: scrollPosition,\n      baseVelocity: 10,\n      children: \"HEEWON'S AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_c2 = PreAI;\nvar _c, _c2;\n$RefreshReg$(_c, \"ParallaxText\");\n$RefreshReg$(_c2, \"PreAI\");","map":{"version":3,"names":["useEffect","motion","useTransform","useMotionValue","wrap","Typography","useTheme","useMediaQuery","jsxDEV","_jsxDEV","ParallaxText","children","baseVelocity","scrollPosition","img","_s","baseX","x","v","updateX","set","window","addEventListener","removeEventListener","theme","isSmallScreen","breakpoints","down","style","display","justifyContent","alignItems","overflowX","div","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","color","fontWeight","variant","fontSize","textAlign","_c","PreAI","paddingTop","_c2","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Break/PreAI.jsx"],"sourcesContent":["// PreSkill.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport { useEffect } from \"react\";\nimport { motion, useTransform, useMotionValue } from \"framer-motion\";\nimport { wrap } from \"@motionone/utils\";\nimport { Typography, useTheme, useMediaQuery } from \"@mui/material\";\n\n/**\n * ParallaxText component for displaying text and img with parallax effect.\n *\n * @param {Object} props - Component properties.\n * @param {ReactNode} props.children - Text content to be displayed.\n * @param {number} [props.baseVelocity=100] - Base velocity for parallax effect.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @param {string} [props.img] - Image source URL.\n * @returns {JSX.Element} - ParallaxText component JSX.\n */\nfunction ParallaxText({ children, baseVelocity = 100, scrollPosition, img }) {\n    const baseX = useMotionValue(0);\n\n    const x = useTransform(baseX, (v) => `${wrap(-50, 50, v)}%`);\n\n    useEffect(() => {\n        const updateX = () => {\n            baseX.set((scrollPosition / 1400) * baseVelocity);\n        };\n\n        updateX();\n\n        // Add scroll event listener\n        window.addEventListener(\"scroll\", updateX);\n\n        return () => {\n            // Remove scroll event listener on component unmount\n            window.removeEventListener(\"scroll\", updateX);\n        };\n    }, [scrollPosition, baseVelocity, baseX]);\n\n    const theme = useTheme();\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    return (\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', overflowX: 'hidden' }}>\n            {img ? (\n                <motion.div style={{ x: x }}>\n                    <img src={img} alt=\"Parallax\" style={{ width: '70%', height: 'auto' }} />\n                </motion.div>\n            ) : (\n                <motion.div style={{ x: x, width: '100%' }}>\n                    <Typography color={'#FFF'} fontWeight={\"bold\"} variant=\"h1\" style={{ fontSize: isSmallScreen ? \"2em\" : \"5.5rem\", textAlign: \"center\" }}>\n                        {children}\n                    </Typography>\n                </motion.div>\n            )}\n        </div>\n    );\n}\n\n/**\n * PreAI component displaying parallax text sections.\n *\n * @param {Object} props - Component properties.\n * @param {number} props.scrollPosition - Current scroll position for parallax calculation.\n * @returns {JSX.Element} - ProSkill component JSX.\n */\nexport default function PreAI({ scrollPosition }) {\n    return (\n        <section style={{paddingTop:'10rem'}}>\n            <ParallaxText scrollPosition={scrollPosition} baseVelocity={-40} img=\"./robot.png?as=webp\" />\n            <ParallaxText scrollPosition={scrollPosition} baseVelocity={-10}>BEFORE START</ParallaxText>\n            <ParallaxText scrollPosition={scrollPosition} baseVelocity={0}>CHAT WITH</ParallaxText>\n            <ParallaxText scrollPosition={scrollPosition} baseVelocity={10}>HEEWON'S AI</ParallaxText>\n        </section>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}