{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Wrapper/Scroll.jsx\",\n  _s = $RefreshSig$();\n// Scroll.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport React, { useState, useRef } from \"react\";\nimport Header from \"../Header/Header\";\nimport Motion from \"./Motion\";\n\n/**\n * Scroll component handling vertical scrolling and displaying a Header.\n * @param {Object} props - Props for the Scroll component.\n * @param {React.Component[]} props.components - Array of React components to be displayed.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scroll = ({\n  components\n}) => {\n  _s();\n  var _scrollRef$current, _scrollRef$current2;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const scrollRef = useRef();\n  useEffect(() => {\n    const handleResize = () => {\n      if (scrollRef.current) {\n        const componentHeight = scrollRef.current.clientHeight;\n        const newIndex = scrollRef.current.scrollTop / componentHeight;\n        setActiveIndex(newIndex);\n      }\n    };\n    if (scrollRef.current) {\n      window.addEventListener(\"resize\", handleResize);\n      return () => {\n        window.removeEventListener(\"resize\", handleResize);\n      };\n    }\n  }, []);\n  const handleScroll = () => {\n    if (scrollRef.current) {\n      const scrollTop = scrollRef.current.scrollTop;\n      const componentHeight = scrollRef.current.clientHeight;\n      const newIndex = scrollTop / componentHeight;\n      setActiveIndex(newIndex);\n\n      // 스크롤 위치 업데이트\n      setScrollPosition(scrollTop);\n    }\n  };\n  const calculateOpacity = index => {\n    if (scrollRef.current) {\n      const componentHeight = scrollRef.current.clientHeight;\n      const distanceToComponent = Math.abs(scrollPosition - index * componentHeight);\n      const maxDistance = componentHeight * 0.4;\n\n      // Calculate opacity based on the distance to the component\n      const opacity = 1 - Math.min(distanceToComponent / maxDistance, 1);\n      return opacity;\n    }\n\n    // Default opacity if scrollRef.current is undefined\n    return 1;\n  };\n  const scrollToComponent = index => {\n    if (scrollRef.current) {\n      const componentHeight = scrollRef.current.clientHeight;\n      scrollRef.current.scrollTo({\n        top: index * componentHeight,\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const updateSlideState = index => {\n    scrollToComponent(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: scrollRef,\n    onScroll: handleScroll,\n    style: {\n      height: \"100vh\",\n      overflowY: \"scroll\",\n      scrollBehavior: \"smooth\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      orientation: 'vertical',\n      length: components.length,\n      clickHandler: updateSlideState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), scrollPosition !== 0 && /*#__PURE__*/_jsxDEV(Motion, {\n      scrollPosition: scrollPosition,\n      scrollHeight: (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollHeight,\n      clientHeight: (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.clientHeight\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), components.map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100vh\",\n        opacity: calculateOpacity(index),\n        transition: \"opacity 0.2s ease-in-out\"\n      },\n      children: /*#__PURE__*/React.cloneElement(component, {\n        isActive: index === activeIndex,\n        scrollPosition,\n        activeIndex\n      })\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(Scroll, \"yOwCwCtz2x3WHvcMgWmNpphXtBM=\");\n_c = Scroll;\nexport default Scroll;\nvar _c;\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["React","useState","useRef","Header","Motion","jsxDEV","_jsxDEV","Scroll","components","_s","_scrollRef$current","_scrollRef$current2","activeIndex","setActiveIndex","scrollPosition","setScrollPosition","scrollRef","useEffect","handleResize","current","componentHeight","clientHeight","newIndex","scrollTop","window","addEventListener","removeEventListener","handleScroll","calculateOpacity","index","distanceToComponent","Math","abs","maxDistance","opacity","min","scrollToComponent","scrollTo","top","behavior","updateSlideState","ref","onScroll","style","height","overflowY","scrollBehavior","children","orientation","length","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","scrollHeight","map","component","transition","cloneElement","isActive","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Wrapper/Scroll.jsx"],"sourcesContent":["// Scroll.jsx\n/*\nSPDX-FileCopyrightText: © 2024 Heewon Kim <khw0285@gmail.com>\nSPDX-License-Identifier: MIT\n*/\n\nimport React, { useState, useRef } from \"react\";\n\nimport Header from \"../Header/Header\";\nimport Motion from \"./Motion\";\n\n/**\n * Scroll component handling vertical scrolling and displaying a Header.\n * @param {Object} props - Props for the Scroll component.\n * @param {React.Component[]} props.components - Array of React components to be displayed.\n */\nconst Scroll = ({ components }) => {\n    const [activeIndex, setActiveIndex] = useState(0);\n    const [scrollPosition, setScrollPosition] = useState(0);\n\n    const scrollRef = useRef();\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (scrollRef.current) {\n                const componentHeight = scrollRef.current.clientHeight;\n                const newIndex = scrollRef.current.scrollTop / componentHeight;\n                setActiveIndex(newIndex);\n            }\n        };\n\n        if (scrollRef.current) {\n            window.addEventListener(\"resize\", handleResize);\n\n            return () => {\n                window.removeEventListener(\"resize\", handleResize);\n            };\n        }\n    }, []);\n\n    const handleScroll = () => {\n        if (scrollRef.current) {\n            const scrollTop = scrollRef.current.scrollTop;\n            const componentHeight = scrollRef.current.clientHeight;\n\n            const newIndex = scrollTop / componentHeight;\n            setActiveIndex(newIndex);\n\n            // 스크롤 위치 업데이트\n            setScrollPosition(scrollTop);\n        }\n    };\n\n    const calculateOpacity = (index) => {\n        if (scrollRef.current) {\n            const componentHeight = scrollRef.current.clientHeight;\n            const distanceToComponent = Math.abs(scrollPosition - index * componentHeight);\n            const maxDistance = componentHeight * 0.4;\n\n            // Calculate opacity based on the distance to the component\n            const opacity = 1 - Math.min(distanceToComponent / maxDistance, 1);\n\n            return opacity;\n        }\n\n        // Default opacity if scrollRef.current is undefined\n        return 1;\n    };\n\n    const scrollToComponent = (index) => {\n        if (scrollRef.current) {\n            const componentHeight = scrollRef.current.clientHeight;\n            scrollRef.current.scrollTo({\n                top: index * componentHeight,\n                behavior: \"smooth\",\n            });\n        }\n    };\n\n    const updateSlideState = (index) => {\n        scrollToComponent(index);\n    };\n\n    return (\n        <div\n            ref={scrollRef}\n            onScroll={handleScroll}\n            style={{\n                height: \"100vh\",\n                overflowY: \"scroll\",\n                scrollBehavior: \"smooth\",\n            }}\n        >\n            <Header\n                orientation={'vertical'}\n                length={components.length}\n                clickHandler={updateSlideState}\n            />\n            {scrollPosition !== 0 && (\n                <Motion\n                    scrollPosition={scrollPosition}\n                    scrollHeight={scrollRef.current?.scrollHeight}\n                    clientHeight={scrollRef.current?.clientHeight}\n                />\n            )}\n            \n            {components.map((component, index) => (\n                <div\n                    key={index}\n                    style={{\n                        height: \"100vh\",\n                        opacity: calculateOpacity(index), \n                        transition: \"opacity 0.2s ease-in-out\",\n                    }}\n                >\n                    {React.cloneElement(component, { isActive: index === activeIndex, scrollPosition,activeIndex })}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default Scroll;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}