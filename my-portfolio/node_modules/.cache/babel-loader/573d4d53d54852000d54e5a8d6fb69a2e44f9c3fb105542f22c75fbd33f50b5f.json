{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillCard = ({\n  skill\n}) => {\n  _s();\n  const [hovered, setHovered] = useState(false);\n  const [currentColor, setCurrentColor] = useState(getRandomColor());\n  useEffect(() => {\n    if (hovered) {\n      const intervalId = setInterval(() => {\n        setCurrentColor(getRandomColor());\n      }, 100);\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [hovered]);\n  const handleMouseEnter = () => {\n    setHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setHovered(false);\n  };\n  const getRandomColor = () => {\n    // 여기에서 랜덤 색상을 생성하는 로직을 추가할 수 있습니다.\n    // 예를 들어, #RRGGBB 형식의 16진수로 표현된 색상을 생성할 수 있습니다.\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      position: 'relative'\n    },\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: skill.name,\n      style: {\n        maxWidth: \"100%\",\n        height: \"10vh\",\n        objectFit: \"cover\",\n        backgroundColor: hovered ? currentColor : 'transparent'\n      },\n      src: skill.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(SkillCard, \"T+u5pFZ7Op9LMHHShFu3CqS5f64=\");\n_c = SkillCard;\nexport default SkillCard;\nvar _c;\n$RefreshReg$(_c, \"SkillCard\");","map":{"version":3,"names":["React","useState","useEffect","Card","CardContent","Typography","jsxDEV","_jsxDEV","SkillCard","skill","_s","hovered","setHovered","currentColor","setCurrentColor","getRandomColor","intervalId","setInterval","clearInterval","handleMouseEnter","handleMouseLeave","Math","floor","random","toString","style","display","justifyContent","position","onMouseEnter","onMouseLeave","children","alt","name","maxWidth","height","objectFit","backgroundColor","src","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardContent, Typography } from '@mui/material';\n\nconst SkillCard = ({ skill }) => {\n    const [hovered, setHovered] = useState(false);\n    const [currentColor, setCurrentColor] = useState(getRandomColor());\n\n    useEffect(() => {\n        if (hovered) {\n            const intervalId = setInterval(() => {\n                setCurrentColor(getRandomColor());\n            }, 100);\n\n            return () => {\n                clearInterval(intervalId);\n            };\n        }\n    }, [hovered]);\n\n    const handleMouseEnter = () => {\n        setHovered(true);\n    };\n\n    const handleMouseLeave = () => {\n        setHovered(false);\n    };\n\n    const getRandomColor = () => {\n        // 여기에서 랜덤 색상을 생성하는 로직을 추가할 수 있습니다.\n        // 예를 들어, #RRGGBB 형식의 16진수로 표현된 색상을 생성할 수 있습니다.\n        return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                position: 'relative',\n            }}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            <img\n                alt={skill.name}\n                style={{\n                    maxWidth: \"100%\",\n                    height: \"10vh\",\n                    objectFit: \"cover\",\n                    backgroundColor: hovered ? currentColor : 'transparent',\n                }}\n                src={skill.image}\n            />\n        </div>\n    );\n};\n\nexport default SkillCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAACc,cAAc,CAAC,CAAC,CAAC;EAElEb,SAAS,CAAC,MAAM;IACZ,IAAIS,OAAO,EAAE;MACT,MAAMK,UAAU,GAAGC,WAAW,CAAC,MAAM;QACjCH,eAAe,CAACC,cAAc,CAAC,CAAC,CAAC;MACrC,CAAC,EAAE,GAAG,CAAC;MAEP,OAAO,MAAM;QACTG,aAAa,CAACF,UAAU,CAAC;MAC7B,CAAC;IACL;EACJ,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC3BP,UAAU,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC3BR,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IACzB;IACA;IACA,OAAQ,IAAGM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAE,EAAC;EAClE,CAAC;EAED,oBACIjB,OAAA;IACIkB,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,QAAQ,EAAE;IACd,CAAE;IACFC,YAAY,EAAEV,gBAAiB;IAC/BW,YAAY,EAAEV,gBAAiB;IAAAW,QAAA,eAE/BxB,OAAA;MACIyB,GAAG,EAAEvB,KAAK,CAACwB,IAAK;MAChBR,KAAK,EAAE;QACHS,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,OAAO;QAClBC,eAAe,EAAE1B,OAAO,GAAGE,YAAY,GAAG;MAC9C,CAAE;MACFyB,GAAG,EAAE7B,KAAK,CAAC8B;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjC,EAAA,CApDIF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}