{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx\",\n  _s = $RefreshSig$();\n// Updated SkillCard component\nimport React, { useRef, useEffect } from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { Card, CardContent, Typography, useTheme, useMediaQuery, responsiveFontSizes, ThemeProvider } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkillCard = ({\n  skill,\n  index,\n  activeIndex\n}) => {\n  _s();\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const responsiveTheme = responsiveFontSizes(theme);\n  const domTarget = useRef(null);\n  const [{\n    x,\n    y,\n    opacity,\n    zIndex\n  }, api] = useSpring(() => ({\n    x: 0,\n    y: 0,\n    opacity: 0,\n    zIndex: -index // Set zIndex based on the index to control the stacking order\n  }));\n  useEffect(() => {\n    // Animate the card when it becomes active\n    api.start({\n      x: activeIndex === index ? 0 : 1000,\n      // Adjust the distance based on your preference\n      y: activeIndex === index ? 0 : 1000,\n      // Adjust the distance based on your preference\n      opacity: activeIndex === index ? 1 : 0,\n      zIndex: activeIndex === index ? index : -index\n    });\n  }, [activeIndex, index, api]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: responsiveTheme,\n    children: /*#__PURE__*/_jsxDEV(animated.div, {\n      ref: domTarget,\n      style: {\n        transform: \"perspective(600px) translate3d(${x}px, ${y}px, 0)\",\n        opacity,\n        zIndex\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        variant: \"outlined\",\n        sx: {\n          width: '90%',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            fontWeight: \"bold\",\n            sx: {\n              marginLeft: {\n                xs: '-15px',\n                sm: '-15px',\n                md: '0px'\n              },\n              fontSize: {\n                xs: '8px',\n                sm: '8px',\n                md: '16px'\n              }\n            },\n            children: skill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(SkillCard, \"6ZhxX5gTRkdYBuSMBjTqXqJZE2Q=\", false, function () {\n  return [useTheme, useMediaQuery, useSpring];\n});\n_c = SkillCard;\nexport default SkillCard;\nvar _c;\n$RefreshReg$(_c, \"SkillCard\");","map":{"version":3,"names":["React","useRef","useEffect","useSpring","animated","Card","CardContent","Typography","useTheme","useMediaQuery","responsiveFontSizes","ThemeProvider","jsxDEV","_jsxDEV","SkillCard","skill","index","activeIndex","_s","theme","isSmallScreen","breakpoints","down","responsiveTheme","domTarget","x","y","opacity","zIndex","api","start","children","div","ref","style","transform","variant","sx","width","height","fontWeight","marginLeft","xs","sm","md","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/Skills/SkillCard.jsx"],"sourcesContent":["// Updated SkillCard component\nimport React, { useRef, useEffect } from \"react\";\nimport { useSpring, animated } from \"@react-spring/web\";\nimport { Card, CardContent, Typography, useTheme, useMediaQuery, responsiveFontSizes, ThemeProvider } from \"@mui/material\";\n\nconst SkillCard = ({ skill, index, activeIndex }) => {\n    const theme = useTheme();\n    const isSmallScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n    const responsiveTheme = responsiveFontSizes(theme);\n\n    const domTarget = useRef(null);\n\n    const [{ x, y, opacity, zIndex }, api] = useSpring(() => ({\n        x: 0,\n        y: 0,\n        opacity: 0,\n        zIndex: -index, // Set zIndex based on the index to control the stacking order\n    }));\n\n    useEffect(() => {\n        // Animate the card when it becomes active\n        api.start({\n            x: activeIndex === index ? 0 : 1000, // Adjust the distance based on your preference\n            y: activeIndex === index ? 0 : 1000, // Adjust the distance based on your preference\n            opacity: activeIndex === index ? 1 : 0,\n            zIndex: activeIndex === index ? index : -index,\n        });\n    }, [activeIndex, index, api]);\n\n    return (\n        <ThemeProvider theme={responsiveTheme}>\n            <animated.div\n                ref={domTarget}\n                style={{\n                    transform: \"perspective(600px) translate3d(${x}px, ${y}px, 0)\",\n                    opacity,\n                    zIndex,\n                }}\n            >\n                <Card variant=\"outlined\" sx={{ width: '90%', height: '100%' }}>\n                    <CardContent>\n                        <Typography fontWeight={\"bold\"} sx={{ marginLeft: { xs: '-15px', sm: '-15px', md: '0px' }, fontSize: { xs: '8px', sm: '8px', md: '16px' } }}>\n                            {skill}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </animated.div>\n        </ThemeProvider>\n    );\n};\n\nexport default SkillCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}