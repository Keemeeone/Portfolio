{"ast":null,"code":"var _jsxFileName = \"/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = ({\n  children\n}) => {\n  _s();\n  const sectionsRef = useRef([]);\n  const scrollToSection = index => {\n    const targetSection = sectionsRef.current[index];\n    if (targetSection) {\n      targetSection.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  const handleScroll = () => {\n    // 현재 화면에 표시된 섹션을 계산하여 다음 섹션으로 스크롤\n    const currentSectionIndex = Math.floor(window.scrollY / window.innerHeight);\n    const nextSectionIndex = currentSectionIndex + 1;\n    scrollToSection(nextSectionIndex);\n  };\n  useEffect(() => {\n    // 섹션들의 ref를 배열에 저장\n    sectionsRef.current = sectionsRef.current.slice(0, children.length);\n  }, [children]);\n  useEffect(() => {\n    // 마운트될 때 스크롤 이벤트 추가\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // 컴포넌트 언마운트 시 이벤트 제거\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: React.Children.map(children, (child, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => sectionsRef.current[index] = el,\n      style: {\n        flex: \"1\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"/ta2wsr9f3Tz/o+4A6dbb4Y7aoo=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Main","children","_s","sectionsRef","scrollToSection","index","targetSection","current","scrollIntoView","behavior","handleScroll","currentSectionIndex","Math","floor","window","scrollY","innerHeight","nextSectionIndex","slice","length","addEventListener","removeEventListener","Children","map","child","ref","el","style","flex","minHeight","display","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/heewonkim/Desktop/portfolio/my-portfolio/src/components/Main.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\n\nconst Main = ({ children }) => {\n  const sectionsRef = useRef([]);\n\n  const scrollToSection = (index) => {\n    const targetSection = sectionsRef.current[index];\n    if (targetSection) {\n      targetSection.scrollIntoView({\n        behavior: \"smooth\",\n      });\n    }\n  };\n\n  const handleScroll = () => {\n    // 현재 화면에 표시된 섹션을 계산하여 다음 섹션으로 스크롤\n    const currentSectionIndex = Math.floor(\n      window.scrollY / window.innerHeight\n    );\n    const nextSectionIndex = currentSectionIndex + 1;\n\n    scrollToSection(nextSectionIndex);\n  };\n\n  useEffect(() => {\n    // 섹션들의 ref를 배열에 저장\n    sectionsRef.current = sectionsRef.current.slice(0, children.length);\n  }, [children]);\n\n  useEffect(() => {\n    // 마운트될 때 스크롤 이벤트 추가\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // 컴포넌트 언마운트 시 이벤트 제거\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return (\n    <main>\n      {React.Children.map(children, (child, index) => (\n        <div\n          ref={(el) => (sectionsRef.current[index] = el)}\n          style={{\n            flex: \"1\",\n            minHeight: \"100vh\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          {child}\n        </div>\n      ))}\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,WAAW,GAAGP,MAAM,CAAC,EAAE,CAAC;EAE9B,MAAMQ,eAAe,GAAIC,KAAK,IAAK;IACjC,MAAMC,aAAa,GAAGH,WAAW,CAACI,OAAO,CAACF,KAAK,CAAC;IAChD,IAAIC,aAAa,EAAE;MACjBA,aAAa,CAACE,cAAc,CAAC;QAC3BC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,MAAMC,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CACpCC,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACE,WAC1B,CAAC;IACD,MAAMC,gBAAgB,GAAGN,mBAAmB,GAAG,CAAC;IAEhDP,eAAe,CAACa,gBAAgB,CAAC;EACnC,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd;IACAM,WAAW,CAACI,OAAO,GAAGJ,WAAW,CAACI,OAAO,CAACW,KAAK,CAAC,CAAC,EAAEjB,QAAQ,CAACkB,MAAM,CAAC;EACrE,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEdJ,SAAS,CAAC,MAAM;IACd;IACAiB,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAEV,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXI,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEX,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACEX,OAAA;IAAAE,QAAA,EACGN,KAAK,CAAC2B,QAAQ,CAACC,GAAG,CAACtB,QAAQ,EAAE,CAACuB,KAAK,EAAEnB,KAAK,kBACzCN,OAAA;MACE0B,GAAG,EAAGC,EAAE,IAAMvB,WAAW,CAACI,OAAO,CAACF,KAAK,CAAC,GAAGqB,EAAI;MAC/CC,KAAK,EAAE;QACLC,IAAI,EAAE,GAAG;QACTC,SAAS,EAAE,OAAO;QAClBC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE;MACjB,CAAE;MAAA9B,QAAA,EAEDuB;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACjC,EAAA,CAtDIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AAwDV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}