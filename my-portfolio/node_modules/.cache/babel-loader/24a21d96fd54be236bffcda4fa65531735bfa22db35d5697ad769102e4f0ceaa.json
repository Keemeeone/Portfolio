{"ast":null,"code":"import OpenAI from 'openai';\nconst openai = new OpenAI();\nasync function main() {\n  const stream = await openai.chat.completions.create({\n    model: 'gpt-4',\n    messages: [{\n      role: 'user',\n      content: 'Say this is a test'\n    }],\n    stream: true\n  });\n  for await (const chunk of stream) {\n    var _chunk$choices$, _chunk$choices$$delta;\n    process.stdout.write(((_chunk$choices$ = chunk.choices[0]) === null || _chunk$choices$ === void 0 ? void 0 : (_chunk$choices$$delta = _chunk$choices$.delta) === null || _chunk$choices$$delta === void 0 ? void 0 : _chunk$choices$$delta.content) || '');\n  }\n}\nmain();","map":{"version":3,"names":["OpenAI","openai","main","stream","chat","completions","create","model","messages","role","content","chunk","_chunk$choices$","_chunk$choices$$delta","process","stdout","write","choices","delta"],"sources":["/Users/heewonkim/Desktop/Portfolio/my-portfolio/src/components/AIchat/AIchat.jsx"],"sourcesContent":["import OpenAI from 'openai';\n\nconst openai = new OpenAI();\n\nasync function main() {\n  const stream = await openai.chat.completions.create({\n    model: 'gpt-4',\n    messages: [{ role: 'user', content: 'Say this is a test' }],\n    stream: true,\n  });\n  for await (const chunk of stream) {\n    process.stdout.write(chunk.choices[0]?.delta?.content || '');\n  }\n}\n\nmain();"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAE3B,MAAMC,MAAM,GAAG,IAAID,MAAM,CAAC,CAAC;AAE3B,eAAeE,IAAIA,CAAA,EAAG;EACpB,MAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;IAClDC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;IAAqB,CAAC,CAAC;IAC3DP,MAAM,EAAE;EACV,CAAC,CAAC;EACF,WAAW,MAAMQ,KAAK,IAAIR,MAAM,EAAE;IAAA,IAAAS,eAAA,EAAAC,qBAAA;IAChCC,OAAO,CAACC,MAAM,CAACC,KAAK,CAAC,EAAAJ,eAAA,GAAAD,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC,cAAAL,eAAA,wBAAAC,qBAAA,GAAhBD,eAAA,CAAkBM,KAAK,cAAAL,qBAAA,uBAAvBA,qBAAA,CAAyBH,OAAO,KAAI,EAAE,CAAC;EAC9D;AACF;AAEAR,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}